/* -*- C++ -*- */
/* Generated by /dvs/git/dirty/git-master_autodds/middleware/dds/opendds/build/host/bin/opendds_idl version 3.13 (ACE version 6.2a_p14) running on input file DdsSecurityCore.idl */
#ifndef OPENDDS_IDL_GENERATED_DDSSECURITYCORETYPESUPPORTIMPL_H_LM8OUE
#define OPENDDS_IDL_GENERATED_DDSSECURITYCORETYPESUPPORTIMPL_H_LM8OUE
#include "DdsSecurityCoreC.h"
#include "dds/DCPS/Definitions.h"
#include "dds/DdsDcpsC.h"
#include "DdsDcpsGuidC.h"
#include "DdsDcpsInfrastructureC.h"
#include "DdsDcpsPublicationC.h"
#include "DdsDcpsSubscriptionC.h"
#include "DdsSecurityParamsC.h"
#include "dds/DCPS/Serializer.h"
#include "dds/DCPS/dcps_export.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: OpenDDS */



/* Begin MODULE: DCPS */



/* Begin TYPEDEF: GuidVendorId_t */


/* End TYPEDEF: GuidVendorId_t */


/* Begin TYPEDEF: GuidPrefix_t */


/* End TYPEDEF: GuidPrefix_t */


/* Begin TYPEDEF: EntityKey_t */


/* End TYPEDEF: EntityKey_t */


/* Begin STRUCT: EntityId_t */


/* End STRUCT: EntityId_t */


/* Begin CONST: ENTITYKIND_BUILTIN_UNKNOWN */


/* End CONST: ENTITYKIND_BUILTIN_UNKNOWN */


/* Begin CONST: ENTITYKIND_BUILTIN_PARTICIPANT */


/* End CONST: ENTITYKIND_BUILTIN_PARTICIPANT */


/* Begin CONST: ENTITYKIND_BUILTIN_WRITER_WITH_KEY */


/* End CONST: ENTITYKIND_BUILTIN_WRITER_WITH_KEY */


/* Begin CONST: ENTITYKIND_BUILTIN_WRITER_NO_KEY */


/* End CONST: ENTITYKIND_BUILTIN_WRITER_NO_KEY */


/* Begin CONST: ENTITYKIND_BUILTIN_READER_NO_KEY */


/* End CONST: ENTITYKIND_BUILTIN_READER_NO_KEY */


/* Begin CONST: ENTITYKIND_BUILTIN_READER_WITH_KEY */


/* End CONST: ENTITYKIND_BUILTIN_READER_WITH_KEY */


/* Begin CONST: ENTITYKIND_BUILTIN_TOPIC */


/* End CONST: ENTITYKIND_BUILTIN_TOPIC */


/* Begin CONST: ENTITYKIND_USER_UNKNOWN */


/* End CONST: ENTITYKIND_USER_UNKNOWN */


/* Begin CONST: ENTITYKIND_USER_WRITER_WITH_KEY */


/* End CONST: ENTITYKIND_USER_WRITER_WITH_KEY */


/* Begin CONST: ENTITYKIND_USER_WRITER_NO_KEY */


/* End CONST: ENTITYKIND_USER_WRITER_NO_KEY */


/* Begin CONST: ENTITYKIND_USER_READER_NO_KEY */


/* End CONST: ENTITYKIND_USER_READER_NO_KEY */


/* Begin CONST: ENTITYKIND_USER_READER_WITH_KEY */


/* End CONST: ENTITYKIND_USER_READER_WITH_KEY */


/* Begin CONST: ENTITYKIND_OPENDDS_SUBSCRIBER */


/* End CONST: ENTITYKIND_OPENDDS_SUBSCRIBER */


/* Begin CONST: ENTITYKIND_OPENDDS_PUBLISHER */


/* End CONST: ENTITYKIND_OPENDDS_PUBLISHER */


/* Begin CONST: ENTITYKIND_OPENDDS_TOPIC */


/* End CONST: ENTITYKIND_OPENDDS_TOPIC */


/* Begin CONST: ENTITYKIND_OPENDDS_USER */


/* End CONST: ENTITYKIND_OPENDDS_USER */


/* Begin CONST: ENTITYKIND_OPENDDS_NIL_WRITER */


/* End CONST: ENTITYKIND_OPENDDS_NIL_WRITER */


/* Begin STRUCT: GUID_t */


/* End STRUCT: GUID_t */


/* Begin TYPEDEF: GUIDSeq */


/* End TYPEDEF: GUIDSeq */

/* End MODULE: DCPS */

/* End MODULE: OpenDDS */


/* Begin MODULE: CORBA */



/* Begin TYPEDEF: StringSeq */


/* End TYPEDEF: StringSeq */

/* End MODULE: CORBA */


/* Begin MODULE: CORBA */



/* Begin TYPEDEF: LongSeq */


/* End TYPEDEF: LongSeq */

/* End MODULE: CORBA */


/* Begin MODULE: DDS */



/* Begin TYPEDEF: StringSeq */


/* End TYPEDEF: StringSeq */


/* Begin TYPEDEF: InstanceHandle_t */


/* End TYPEDEF: InstanceHandle_t */


/* Begin TYPEDEF: BuiltinTopicKeyValue */


/* End TYPEDEF: BuiltinTopicKeyValue */


/* Begin TYPEDEF: InstanceHandleSeq */


/* End TYPEDEF: InstanceHandleSeq */


/* Begin TYPEDEF: QosPolicyId_t */


/* End TYPEDEF: QosPolicyId_t */


/* Begin STRUCT: QosPolicyCount */


/* End STRUCT: QosPolicyCount */


/* Begin TYPEDEF: QosPolicyCountSeq */


/* End TYPEDEF: QosPolicyCountSeq */


/* Begin TYPEDEF: OctetSeq */


/* End TYPEDEF: OctetSeq */


/* Begin STRUCT: Duration_t */


/* End STRUCT: Duration_t */


/* Begin CONST: DURATION_INFINITE_SEC */


/* End CONST: DURATION_INFINITE_SEC */


/* Begin CONST: DURATION_INFINITE_NSEC */


/* End CONST: DURATION_INFINITE_NSEC */


/* Begin CONST: DURATION_ZERO_SEC */


/* End CONST: DURATION_ZERO_SEC */


/* Begin CONST: DURATION_ZERO_NSEC */


/* End CONST: DURATION_ZERO_NSEC */


/* Begin STRUCT: Property_t */


/* End STRUCT: Property_t */


/* Begin TYPEDEF: PropertySeq */


/* End TYPEDEF: PropertySeq */


/* Begin STRUCT: BinaryProperty_t */


/* End STRUCT: BinaryProperty_t */


/* Begin TYPEDEF: BinaryPropertySeq */


/* End TYPEDEF: BinaryPropertySeq */


/* Begin STRUCT: PropertyQosPolicy */


/* End STRUCT: PropertyQosPolicy */


/* Begin STRUCT: UserDataQosPolicy */


/* End STRUCT: UserDataQosPolicy */


/* Begin STRUCT: GroupDataQosPolicy */


/* End STRUCT: GroupDataQosPolicy */


/* Begin STRUCT: TopicDataQosPolicy */


/* End STRUCT: TopicDataQosPolicy */


/* Begin STRUCT: PartitionQosPolicy */


/* End STRUCT: PartitionQosPolicy */


/* Begin ENUM: HistoryQosPolicyKind */


/* End ENUM: HistoryQosPolicyKind */


/* Begin ENUM: DurabilityQosPolicyKind */


/* End ENUM: DurabilityQosPolicyKind */


/* Begin STRUCT: DurabilityQosPolicy */


/* End STRUCT: DurabilityQosPolicy */


/* Begin STRUCT: DurabilityServiceQosPolicy */


/* End STRUCT: DurabilityServiceQosPolicy */


/* Begin STRUCT: DeadlineQosPolicy */


/* End STRUCT: DeadlineQosPolicy */


/* Begin STRUCT: LatencyBudgetQosPolicy */


/* End STRUCT: LatencyBudgetQosPolicy */


/* Begin ENUM: LivelinessQosPolicyKind */


/* End ENUM: LivelinessQosPolicyKind */


/* Begin STRUCT: LivelinessQosPolicy */


/* End STRUCT: LivelinessQosPolicy */


/* Begin ENUM: ReliabilityQosPolicyKind */


/* End ENUM: ReliabilityQosPolicyKind */


/* Begin STRUCT: ReliabilityQosPolicy */


/* End STRUCT: ReliabilityQosPolicy */


/* Begin ENUM: DestinationOrderQosPolicyKind */


/* End ENUM: DestinationOrderQosPolicyKind */


/* Begin STRUCT: DestinationOrderQosPolicy */


/* End STRUCT: DestinationOrderQosPolicy */


/* Begin STRUCT: HistoryQosPolicy */


/* End STRUCT: HistoryQosPolicy */


/* Begin STRUCT: ResourceLimitsQosPolicy */


/* End STRUCT: ResourceLimitsQosPolicy */


/* Begin STRUCT: TransportPriorityQosPolicy */


/* End STRUCT: TransportPriorityQosPolicy */


/* Begin STRUCT: LifespanQosPolicy */


/* End STRUCT: LifespanQosPolicy */


/* Begin ENUM: OwnershipQosPolicyKind */


/* End ENUM: OwnershipQosPolicyKind */


/* Begin STRUCT: OwnershipQosPolicy */


/* End STRUCT: OwnershipQosPolicy */


/* Begin STRUCT: OwnershipStrengthQosPolicy */


/* End STRUCT: OwnershipStrengthQosPolicy */


/* Begin ENUM: PresentationQosPolicyAccessScopeKind */


/* End ENUM: PresentationQosPolicyAccessScopeKind */


/* Begin STRUCT: PresentationQosPolicy */


/* End STRUCT: PresentationQosPolicy */


/* Begin STRUCT: TimeBasedFilterQosPolicy */


/* End STRUCT: TimeBasedFilterQosPolicy */


/* Begin STRUCT: TopicQos */


/* End STRUCT: TopicQos */


/* Begin STRUCT: WriterDataLifecycleQosPolicy */


/* End STRUCT: WriterDataLifecycleQosPolicy */


/* Begin STRUCT: DataWriterQos */


/* End STRUCT: DataWriterQos */


/* Begin STRUCT: EntityFactoryQosPolicy */


/* End STRUCT: EntityFactoryQosPolicy */


/* Begin STRUCT: PublisherQos */


/* End STRUCT: PublisherQos */


/* Begin STRUCT: ReaderDataLifecycleQosPolicy */


/* End STRUCT: ReaderDataLifecycleQosPolicy */


/* Begin STRUCT: DataReaderQos */


/* End STRUCT: DataReaderQos */


/* Begin STRUCT: SubscriberQos */


/* End STRUCT: SubscriberQos */


/* Begin STRUCT: DomainParticipantFactoryQos */


/* End STRUCT: DomainParticipantFactoryQos */


/* Begin STRUCT: DomainParticipantQos */


/* End STRUCT: DomainParticipantQos */


/* Begin STRUCT: BuiltinTopicKey_t */


/* End STRUCT: BuiltinTopicKey_t */


/* Begin STRUCT: ParticipantBuiltinTopicData */


/* End STRUCT: ParticipantBuiltinTopicData */


/* Begin STRUCT: PublicationBuiltinTopicData */


/* End STRUCT: PublicationBuiltinTopicData */


/* Begin STRUCT: SubscriptionBuiltinTopicData */


/* End STRUCT: SubscriptionBuiltinTopicData */


/* Begin STRUCT: TopicBuiltinTopicData */


/* End STRUCT: TopicBuiltinTopicData */


/* Begin TYPEDEF: SampleStateKind */


/* End TYPEDEF: SampleStateKind */


/* Begin CONST: READ_SAMPLE_STATE */


/* End CONST: READ_SAMPLE_STATE */


/* Begin CONST: NOT_READ_SAMPLE_STATE */


/* End CONST: NOT_READ_SAMPLE_STATE */


/* Begin TYPEDEF: SampleStateMask */


/* End TYPEDEF: SampleStateMask */


/* Begin CONST: ANY_SAMPLE_STATE */


/* End CONST: ANY_SAMPLE_STATE */


/* Begin TYPEDEF: ViewStateKind */


/* End TYPEDEF: ViewStateKind */


/* Begin CONST: NEW_VIEW_STATE */


/* End CONST: NEW_VIEW_STATE */


/* Begin CONST: NOT_NEW_VIEW_STATE */


/* End CONST: NOT_NEW_VIEW_STATE */


/* Begin TYPEDEF: ViewStateMask */


/* End TYPEDEF: ViewStateMask */


/* Begin CONST: ANY_VIEW_STATE */


/* End CONST: ANY_VIEW_STATE */


/* Begin TYPEDEF: InstanceStateKind */


/* End TYPEDEF: InstanceStateKind */


/* Begin CONST: ALIVE_INSTANCE_STATE */


/* End CONST: ALIVE_INSTANCE_STATE */


/* Begin CONST: NOT_ALIVE_DISPOSED_INSTANCE_STATE */


/* End CONST: NOT_ALIVE_DISPOSED_INSTANCE_STATE */


/* Begin CONST: NOT_ALIVE_NO_WRITERS_INSTANCE_STATE */


/* End CONST: NOT_ALIVE_NO_WRITERS_INSTANCE_STATE */


/* Begin TYPEDEF: InstanceStateMask */


/* End TYPEDEF: InstanceStateMask */


/* Begin CONST: ANY_INSTANCE_STATE */


/* End CONST: ANY_INSTANCE_STATE */


/* Begin CONST: NOT_ALIVE_INSTANCE_STATE */


/* End CONST: NOT_ALIVE_INSTANCE_STATE */


/* Begin STRUCT: Time_t */


/* End STRUCT: Time_t */


/* Begin CONST: TIME_INVALID_SEC */


/* End CONST: TIME_INVALID_SEC */


/* Begin CONST: TIME_INVALID_NSEC */


/* End CONST: TIME_INVALID_NSEC */


/* Begin STRUCT: SampleInfo */


/* End STRUCT: SampleInfo */


/* Begin TYPEDEF: SampleInfoSeq */


/* End TYPEDEF: SampleInfoSeq */

/* End MODULE: DDS */


/* Begin MODULE: DDS */



/* Begin INTERFACE-FWD: Condition */


/* End INTERFACE-FWD: Condition */


/* Begin TYPEDEF: ConditionSeq */


/* End TYPEDEF: ConditionSeq */

/* End MODULE: DDS */


/* Begin MODULE: DDS */



/* Begin TYPEDEF: DomainId_t */


/* End TYPEDEF: DomainId_t */


/* Begin TYPEDEF: ReturnCode_t */


/* End TYPEDEF: ReturnCode_t */


/* Begin CONST: HANDLE_NIL */


/* End CONST: HANDLE_NIL */


/* Begin CONST: LENGTH_UNLIMITED */


/* End CONST: LENGTH_UNLIMITED */


/* Begin CONST: RETCODE_OK */


/* End CONST: RETCODE_OK */


/* Begin CONST: RETCODE_ERROR */


/* End CONST: RETCODE_ERROR */


/* Begin CONST: RETCODE_UNSUPPORTED */


/* End CONST: RETCODE_UNSUPPORTED */


/* Begin CONST: RETCODE_BAD_PARAMETER */


/* End CONST: RETCODE_BAD_PARAMETER */


/* Begin CONST: RETCODE_PRECONDITION_NOT_MET */


/* End CONST: RETCODE_PRECONDITION_NOT_MET */


/* Begin CONST: RETCODE_OUT_OF_RESOURCES */


/* End CONST: RETCODE_OUT_OF_RESOURCES */


/* Begin CONST: RETCODE_NOT_ENABLED */


/* End CONST: RETCODE_NOT_ENABLED */


/* Begin CONST: RETCODE_IMMUTABLE_POLICY */


/* End CONST: RETCODE_IMMUTABLE_POLICY */


/* Begin CONST: RETCODE_INCONSISTENT_POLICY */


/* End CONST: RETCODE_INCONSISTENT_POLICY */


/* Begin CONST: RETCODE_ALREADY_DELETED */


/* End CONST: RETCODE_ALREADY_DELETED */


/* Begin CONST: RETCODE_TIMEOUT */


/* End CONST: RETCODE_TIMEOUT */


/* Begin CONST: RETCODE_NO_DATA */


/* End CONST: RETCODE_NO_DATA */


/* Begin CONST: RETCODE_ILLEGAL_OPERATION */


/* End CONST: RETCODE_ILLEGAL_OPERATION */


/* Begin TYPEDEF: StatusKind */


/* End TYPEDEF: StatusKind */


/* Begin TYPEDEF: StatusMask */


/* End TYPEDEF: StatusMask */


/* Begin CONST: INCONSISTENT_TOPIC_STATUS */


/* End CONST: INCONSISTENT_TOPIC_STATUS */


/* Begin CONST: OFFERED_DEADLINE_MISSED_STATUS */


/* End CONST: OFFERED_DEADLINE_MISSED_STATUS */


/* Begin CONST: REQUESTED_DEADLINE_MISSED_STATUS */


/* End CONST: REQUESTED_DEADLINE_MISSED_STATUS */


/* Begin CONST: OFFERED_INCOMPATIBLE_QOS_STATUS */


/* End CONST: OFFERED_INCOMPATIBLE_QOS_STATUS */


/* Begin CONST: REQUESTED_INCOMPATIBLE_QOS_STATUS */


/* End CONST: REQUESTED_INCOMPATIBLE_QOS_STATUS */


/* Begin CONST: SAMPLE_LOST_STATUS */


/* End CONST: SAMPLE_LOST_STATUS */


/* Begin CONST: SAMPLE_REJECTED_STATUS */


/* End CONST: SAMPLE_REJECTED_STATUS */


/* Begin CONST: DATA_ON_READERS_STATUS */


/* End CONST: DATA_ON_READERS_STATUS */


/* Begin CONST: DATA_AVAILABLE_STATUS */


/* End CONST: DATA_AVAILABLE_STATUS */


/* Begin CONST: LIVELINESS_LOST_STATUS */


/* End CONST: LIVELINESS_LOST_STATUS */


/* Begin CONST: LIVELINESS_CHANGED_STATUS */


/* End CONST: LIVELINESS_CHANGED_STATUS */


/* Begin CONST: PUBLICATION_MATCHED_STATUS */


/* End CONST: PUBLICATION_MATCHED_STATUS */


/* Begin CONST: SUBSCRIPTION_MATCHED_STATUS */


/* End CONST: SUBSCRIPTION_MATCHED_STATUS */


/* Begin STRUCT: InconsistentTopicStatus */


/* End STRUCT: InconsistentTopicStatus */


/* Begin STRUCT: SampleLostStatus */


/* End STRUCT: SampleLostStatus */


/* Begin ENUM: SampleRejectedStatusKind */


/* End ENUM: SampleRejectedStatusKind */


/* Begin STRUCT: SampleRejectedStatus */


/* End STRUCT: SampleRejectedStatus */


/* Begin STRUCT: LivelinessLostStatus */


/* End STRUCT: LivelinessLostStatus */


/* Begin STRUCT: LivelinessChangedStatus */


/* End STRUCT: LivelinessChangedStatus */


/* Begin STRUCT: OfferedDeadlineMissedStatus */


/* End STRUCT: OfferedDeadlineMissedStatus */


/* Begin STRUCT: RequestedDeadlineMissedStatus */


/* End STRUCT: RequestedDeadlineMissedStatus */


/* Begin STRUCT: OfferedIncompatibleQosStatus */


/* End STRUCT: OfferedIncompatibleQosStatus */


/* Begin STRUCT: RequestedIncompatibleQosStatus */


/* End STRUCT: RequestedIncompatibleQosStatus */


/* Begin STRUCT: PublicationMatchedStatus */


/* End STRUCT: PublicationMatchedStatus */


/* Begin STRUCT: SubscriptionMatchedStatus */


/* End STRUCT: SubscriptionMatchedStatus */


/* Begin INTERFACE-FWD: Listener */


/* End INTERFACE-FWD: Listener */


/* Begin INTERFACE-FWD: Entity */


/* End INTERFACE-FWD: Entity */


/* Begin INTERFACE: Listener */


/* End INTERFACE: Listener */


/* Begin INTERFACE: Condition */


/* End INTERFACE: Condition */


/* Begin INTERFACE: WaitSetInterf */


/* End INTERFACE: WaitSetInterf */


/* Begin INTERFACE: GuardConditionInterf */


/* End INTERFACE: GuardConditionInterf */


/* Begin INTERFACE: StatusCondition */


/* End INTERFACE: StatusCondition */


/* Begin CONST: USERDATA_QOS_POLICY_NAME */


/* End CONST: USERDATA_QOS_POLICY_NAME */


/* Begin CONST: DURABILITY_QOS_POLICY_NAME */


/* End CONST: DURABILITY_QOS_POLICY_NAME */


/* Begin CONST: PRESENTATION_QOS_POLICY_NAME */


/* End CONST: PRESENTATION_QOS_POLICY_NAME */


/* Begin CONST: DEADLINE_QOS_POLICY_NAME */


/* End CONST: DEADLINE_QOS_POLICY_NAME */


/* Begin CONST: LATENCYBUDGET_QOS_POLICY_NAME */


/* End CONST: LATENCYBUDGET_QOS_POLICY_NAME */


/* Begin CONST: OWNERSHIP_QOS_POLICY_NAME */


/* End CONST: OWNERSHIP_QOS_POLICY_NAME */


/* Begin CONST: OWNERSHIPSTRENGTH_QOS_POLICY_NAME */


/* End CONST: OWNERSHIPSTRENGTH_QOS_POLICY_NAME */


/* Begin CONST: LIVELINESS_QOS_POLICY_NAME */


/* End CONST: LIVELINESS_QOS_POLICY_NAME */


/* Begin CONST: TIMEBASEDFILTER_QOS_POLICY_NAME */


/* End CONST: TIMEBASEDFILTER_QOS_POLICY_NAME */


/* Begin CONST: PARTITION_QOS_POLICY_NAME */


/* End CONST: PARTITION_QOS_POLICY_NAME */


/* Begin CONST: RELIABILITY_QOS_POLICY_NAME */


/* End CONST: RELIABILITY_QOS_POLICY_NAME */


/* Begin CONST: DESTINATIONORDER_QOS_POLICY_NAME */


/* End CONST: DESTINATIONORDER_QOS_POLICY_NAME */


/* Begin CONST: HISTORY_QOS_POLICY_NAME */


/* End CONST: HISTORY_QOS_POLICY_NAME */


/* Begin CONST: RESOURCELIMITS_QOS_POLICY_NAME */


/* End CONST: RESOURCELIMITS_QOS_POLICY_NAME */


/* Begin CONST: ENTITYFACTORY_QOS_POLICY_NAME */


/* End CONST: ENTITYFACTORY_QOS_POLICY_NAME */


/* Begin CONST: WRITERDATALIFECYCLE_QOS_POLICY_NAME */


/* End CONST: WRITERDATALIFECYCLE_QOS_POLICY_NAME */


/* Begin CONST: READERDATALIFECYCLE_QOS_POLICY_NAME */


/* End CONST: READERDATALIFECYCLE_QOS_POLICY_NAME */


/* Begin CONST: TOPICDATA_QOS_POLICY_NAME */


/* End CONST: TOPICDATA_QOS_POLICY_NAME */


/* Begin CONST: GROUPDATA_QOS_POLICY_NAME */


/* End CONST: GROUPDATA_QOS_POLICY_NAME */


/* Begin CONST: TRANSPORTPRIORITY_QOS_POLICY_NAME */


/* End CONST: TRANSPORTPRIORITY_QOS_POLICY_NAME */


/* Begin CONST: LIFESPAN_QOS_POLICY_NAME */


/* End CONST: LIFESPAN_QOS_POLICY_NAME */


/* Begin CONST: DURABILITYSERVICE_POLICY_NAME */


/* End CONST: DURABILITYSERVICE_POLICY_NAME */


/* Begin CONST: INVALID_QOS_POLICY_ID */


/* End CONST: INVALID_QOS_POLICY_ID */


/* Begin CONST: USERDATA_QOS_POLICY_ID */


/* End CONST: USERDATA_QOS_POLICY_ID */


/* Begin CONST: DURABILITY_QOS_POLICY_ID */


/* End CONST: DURABILITY_QOS_POLICY_ID */


/* Begin CONST: PRESENTATION_QOS_POLICY_ID */


/* End CONST: PRESENTATION_QOS_POLICY_ID */


/* Begin CONST: DEADLINE_QOS_POLICY_ID */


/* End CONST: DEADLINE_QOS_POLICY_ID */


/* Begin CONST: LATENCYBUDGET_QOS_POLICY_ID */


/* End CONST: LATENCYBUDGET_QOS_POLICY_ID */


/* Begin CONST: OWNERSHIP_QOS_POLICY_ID */


/* End CONST: OWNERSHIP_QOS_POLICY_ID */


/* Begin CONST: OWNERSHIPSTRENGTH_QOS_POLICY_ID */


/* End CONST: OWNERSHIPSTRENGTH_QOS_POLICY_ID */


/* Begin CONST: LIVELINESS_QOS_POLICY_ID */


/* End CONST: LIVELINESS_QOS_POLICY_ID */


/* Begin CONST: TIMEBASEDFILTER_QOS_POLICY_ID */


/* End CONST: TIMEBASEDFILTER_QOS_POLICY_ID */


/* Begin CONST: PARTITION_QOS_POLICY_ID */


/* End CONST: PARTITION_QOS_POLICY_ID */


/* Begin CONST: RELIABILITY_QOS_POLICY_ID */


/* End CONST: RELIABILITY_QOS_POLICY_ID */


/* Begin CONST: DESTINATIONORDER_QOS_POLICY_ID */


/* End CONST: DESTINATIONORDER_QOS_POLICY_ID */


/* Begin CONST: HISTORY_QOS_POLICY_ID */


/* End CONST: HISTORY_QOS_POLICY_ID */


/* Begin CONST: RESOURCELIMITS_QOS_POLICY_ID */


/* End CONST: RESOURCELIMITS_QOS_POLICY_ID */


/* Begin CONST: ENTITYFACTORY_QOS_POLICY_ID */


/* End CONST: ENTITYFACTORY_QOS_POLICY_ID */


/* Begin CONST: WRITERDATALIFECYCLE_QOS_POLICY_ID */


/* End CONST: WRITERDATALIFECYCLE_QOS_POLICY_ID */


/* Begin CONST: READERDATALIFECYCLE_QOS_POLICY_ID */


/* End CONST: READERDATALIFECYCLE_QOS_POLICY_ID */


/* Begin CONST: TOPICDATA_QOS_POLICY_ID */


/* End CONST: TOPICDATA_QOS_POLICY_ID */


/* Begin CONST: GROUPDATA_QOS_POLICY_ID */


/* End CONST: GROUPDATA_QOS_POLICY_ID */


/* Begin CONST: TRANSPORTPRIORITY_QOS_POLICY_ID */


/* End CONST: TRANSPORTPRIORITY_QOS_POLICY_ID */


/* Begin CONST: LIFESPAN_QOS_POLICY_ID */


/* End CONST: LIFESPAN_QOS_POLICY_ID */


/* Begin CONST: DURABILITYSERVICE_QOS_POLICY_ID */


/* End CONST: DURABILITYSERVICE_QOS_POLICY_ID */


/* Begin INTERFACE: Entity */


/* End INTERFACE: Entity */

/* End MODULE: DDS */


/* Begin MODULE: OpenDDS */



/* Begin CONST: TRANSPORTTYPE_QOS_POLICY_NAME */


/* End CONST: TRANSPORTTYPE_QOS_POLICY_NAME */


/* Begin CONST: TRANSPORTTYPE_QOS_POLICY_ID */


/* End CONST: TRANSPORTTYPE_QOS_POLICY_ID */


/* Begin CONST: MAX_USER_DOMAINID */


/* End CONST: MAX_USER_DOMAINID */


/* Begin MODULE: DCPS */



/* Begin CONST: ALL_STATUS_MASK */


/* End CONST: ALL_STATUS_MASK */


/* Begin CONST: NO_STATUS_MASK */


/* End CONST: NO_STATUS_MASK */


/* Begin CONST: DEFAULT_STATUS_MASK */


/* End CONST: DEFAULT_STATUS_MASK */

/* End MODULE: DCPS */

/* End MODULE: OpenDDS */


/* Begin MODULE: DDS */



/* Begin INTERFACE-FWD: Topic */


/* End INTERFACE-FWD: Topic */


/* Begin INTERFACE-FWD: DomainParticipant */


/* End INTERFACE-FWD: DomainParticipant */


/* Begin INTERFACE-FWD: DataWriter */


/* End INTERFACE-FWD: DataWriter */


/* Begin INTERFACE-FWD: Publisher */


/* End INTERFACE-FWD: Publisher */


/* Begin INTERFACE: DataWriterListener */


/* End INTERFACE: DataWriterListener */


/* Begin INTERFACE: PublisherListener */


/* End INTERFACE: PublisherListener */


/* Begin INTERFACE: DataWriter */


/* End INTERFACE: DataWriter */


/* Begin INTERFACE: Publisher */


/* End INTERFACE: Publisher */

/* End MODULE: DDS */


/* Begin MODULE: OpenDDS */



/* Begin MODULE: DCPS */



/* Begin STRUCT: PublicationLostStatus */


/* End STRUCT: PublicationLostStatus */


/* Begin TYPEDEF: PublicationDisconnectedStatus */


/* End TYPEDEF: PublicationDisconnectedStatus */


/* Begin TYPEDEF: PublicationReconnectedStatus */


/* End TYPEDEF: PublicationReconnectedStatus */


/* Begin TYPEDEF: DisassociationStatus */


/* End TYPEDEF: DisassociationStatus */


/* Begin INTERFACE: DataWriterListener */


/* End INTERFACE: DataWriterListener */

/* End MODULE: DCPS */

/* End MODULE: OpenDDS */


/* Begin MODULE: DDS */



/* Begin INTERFACE-FWD: DataReader */


/* End INTERFACE-FWD: DataReader */


/* Begin TYPEDEF: DataReaderSeq */


/* End TYPEDEF: DataReaderSeq */

/* End MODULE: DDS */


/* Begin MODULE: DDS */



/* Begin INTERFACE-FWD: TopicDescription */


/* End INTERFACE-FWD: TopicDescription */


/* Begin INTERFACE-FWD: DomainParticipant */


/* End INTERFACE-FWD: DomainParticipant */


/* Begin INTERFACE-FWD: DataReader */


/* End INTERFACE-FWD: DataReader */


/* Begin INTERFACE-FWD: Subscriber */


/* End INTERFACE-FWD: Subscriber */


/* Begin INTERFACE: DataReaderListener */


/* End INTERFACE: DataReaderListener */


/* Begin INTERFACE: SubscriberListener */


/* End INTERFACE: SubscriberListener */


/* Begin INTERFACE: ReadCondition */


/* End INTERFACE: ReadCondition */


/* Begin INTERFACE: QueryCondition */


/* End INTERFACE: QueryCondition */


/* Begin INTERFACE: DataReader */


/* End INTERFACE: DataReader */


/* Begin INTERFACE: Subscriber */


/* End INTERFACE: Subscriber */

/* End MODULE: DDS */


/* Begin MODULE: DDS */



/* Begin MODULE: Security */



/* Begin TYPEDEF: ParameterId_t */


/* End TYPEDEF: ParameterId_t */


/* Begin CONST: PID_IDENTITY_TOKEN */


/* End CONST: PID_IDENTITY_TOKEN */


/* Begin CONST: PID_PERMISSIONS_TOKEN */


/* End CONST: PID_PERMISSIONS_TOKEN */


/* Begin CONST: PID_DATA_TAGS */


/* End CONST: PID_DATA_TAGS */


/* Begin CONST: PID_ENDPOINT_SECURITY_INFO */


/* End CONST: PID_ENDPOINT_SECURITY_INFO */


/* Begin CONST: PID_PARTICIPANT_SECURITY_INFO */


/* End CONST: PID_PARTICIPANT_SECURITY_INFO */


/* Begin CONST: PID_IDENTITY_STATUS_TOKEN */


/* End CONST: PID_IDENTITY_STATUS_TOKEN */


/* Begin STRUCT: DataHolder */


/* End STRUCT: DataHolder */


/* Begin TYPEDEF: DataHolderSeq */


/* End TYPEDEF: DataHolderSeq */


/* Begin TYPEDEF: Token */


/* End TYPEDEF: Token */


/* Begin TYPEDEF: IdentityToken */


/* End TYPEDEF: IdentityToken */


/* Begin TYPEDEF: PermissionsToken */


/* End TYPEDEF: PermissionsToken */


/* Begin TYPEDEF: IdentityStatusToken */


/* End TYPEDEF: IdentityStatusToken */


/* Begin STRUCT: Tag */


/* End STRUCT: Tag */


/* Begin TYPEDEF: TagSeq */


/* End TYPEDEF: TagSeq */


/* Begin STRUCT: DataTags */


/* End STRUCT: DataTags */


/* Begin TYPEDEF: ParticipantSecurityAttributesMask */


/* End TYPEDEF: ParticipantSecurityAttributesMask */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_PROTECTED */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_PROTECTED */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* Begin TYPEDEF: PluginParticipantSecurityAttributesMask */


/* End TYPEDEF: PluginParticipantSecurityAttributesMask */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ENCRYPTED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ENCRYPTED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_BUILTIN_IS_DISCOVERY_ENCRYPTED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_BUILTIN_IS_DISCOVERY_ENCRYPTED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ENCRYPTED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ENCRYPTED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ORIGIN_AUTHENTICATED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_ORIGIN_AUTHENTICATED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ORIGIN_AUTHENTICATED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* Begin STRUCT: ParticipantSecurityInfo */


/* End STRUCT: ParticipantSecurityInfo */


/* Begin TYPEDEF: EndpointSecurityAttributesMask */


/* End TYPEDEF: EndpointSecurityAttributesMask */


/* Begin TYPEDEF: PluginEndpointSecurityAttributesMask */


/* End TYPEDEF: PluginEndpointSecurityAttributesMask */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_READ_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_READ_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_WRITE_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_WRITE_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_KEY_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_KEY_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* Begin CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ENCRYPTED */


/* End CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ENCRYPTED */


/* Begin CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_ENCRYPTED */


/* End CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_ENCRYPTED */


/* Begin CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ORIGIN_AUTHENTICATED */


/* Begin STRUCT: EndpointSecurityInfo */


/* End STRUCT: EndpointSecurityInfo */


/* Begin TYPEDEF: BuiltinEndpointSet_t */


/* End TYPEDEF: BuiltinEndpointSet_t */


/* Begin CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_WRITER */


/* End CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_WRITER */


/* Begin CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_READER */


/* End CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_READER */


/* Begin CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_WRITER */


/* End CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_WRITER */


/* Begin CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_READER */


/* End CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_READER */


/* Begin CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_WRITER */


/* End CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_WRITER */


/* Begin CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_READER */


/* End CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_READER */


/* Begin CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_WRITER */


/* End CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_WRITER */


/* Begin CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_READER */


/* End CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_READER */


/* Begin CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_WRITER */


/* End CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_WRITER */


/* Begin CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_READER */


/* End CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_READER */


/* Begin CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_WRITER */


/* End CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_WRITER */


/* Begin CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_READER */


/* End CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_READER */

/* End MODULE: Security */

/* End MODULE: DDS */


/* Begin MODULE: DDS */



/* Begin MODULE: Security */



/* Begin INTERFACE: DynamicData */


/* End INTERFACE: DynamicData */


/* Begin TYPEDEF: Property_t */


/* End TYPEDEF: Property_t */


/* Begin TYPEDEF: PropertySeq */


/* End TYPEDEF: PropertySeq */


/* Begin TYPEDEF: BinaryProperty_t */


/* End TYPEDEF: BinaryProperty_t */


/* Begin TYPEDEF: BinaryPropertySeq */


/* End TYPEDEF: BinaryPropertySeq */


/* Begin TYPEDEF: PropertyQosPolicy */


/* End TYPEDEF: PropertyQosPolicy */


/* Begin TYPEDEF: MessageToken */


/* End TYPEDEF: MessageToken */


/* Begin TYPEDEF: AuthRequestMessageToken */


/* End TYPEDEF: AuthRequestMessageToken */


/* Begin TYPEDEF: HandshakeMessageToken */


/* End TYPEDEF: HandshakeMessageToken */


/* Begin TYPEDEF: AuthenticatedPeerCredentialToken */


/* End TYPEDEF: AuthenticatedPeerCredentialToken */


/* Begin TYPEDEF: PermissionsCredentialToken */


/* End TYPEDEF: PermissionsCredentialToken */


/* Begin TYPEDEF: CryptoToken */


/* End TYPEDEF: CryptoToken */


/* Begin TYPEDEF: CryptoTokenSeq */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::CryptoTokenSeq& seq, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::CryptoTokenSeq& seq);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::CryptoTokenSeq& seq);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::CryptoTokenSeq*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End TYPEDEF: CryptoTokenSeq */


/* Begin TYPEDEF: ParticipantCryptoToken */


/* End TYPEDEF: ParticipantCryptoToken */


/* Begin TYPEDEF: DatawriterCryptoToken */


/* End TYPEDEF: DatawriterCryptoToken */


/* Begin TYPEDEF: DatareaderCryptoToken */


/* End TYPEDEF: DatareaderCryptoToken */


/* Begin TYPEDEF: ParticipantCryptoTokenSeq */


/* End TYPEDEF: ParticipantCryptoTokenSeq */


/* Begin TYPEDEF: DatawriterCryptoTokenSeq */


/* End TYPEDEF: DatawriterCryptoTokenSeq */


/* Begin TYPEDEF: DatareaderCryptoTokenSeq */


/* End TYPEDEF: DatareaderCryptoTokenSeq */


/* Begin STRUCT: MessageIdentity */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::MessageIdentity& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::MessageIdentity& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::MessageIdentity& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

class MetaStruct;

template<typename T>
const MetaStruct& getMetaStruct();

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::MessageIdentity>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::MessageIdentity*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: MessageIdentity */


/* Begin TYPEDEF: GenericMessageClassId */


/* End TYPEDEF: GenericMessageClassId */


/* Begin STRUCT: ParticipantGenericMessage */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::ParticipantGenericMessage& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ParticipantGenericMessage& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ParticipantGenericMessage& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::ParticipantGenericMessage>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::ParticipantGenericMessage*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: ParticipantGenericMessage */


/* Begin TYPEDEF: ParticipantStatelessMessage */


/* End TYPEDEF: ParticipantStatelessMessage */


/* Begin TYPEDEF: ParticipantVolatileMessageSecure */


/* End TYPEDEF: ParticipantVolatileMessageSecure */


/* Begin CONST: GMCLASSID_SECURITY_AUTH_REQUEST */


/* End CONST: GMCLASSID_SECURITY_AUTH_REQUEST */


/* Begin CONST: GMCLASSID_SECURITY_AUTH_HANDSHAKE */


/* End CONST: GMCLASSID_SECURITY_AUTH_HANDSHAKE */


/* Begin CONST: GMCLASSID_SECURITY_PARTICIPANT_CRYPTO_TOKENS */


/* End CONST: GMCLASSID_SECURITY_PARTICIPANT_CRYPTO_TOKENS */


/* Begin CONST: GMCLASSID_SECURITY_DATAWRITER_CRYPTO_TOKENS */


/* End CONST: GMCLASSID_SECURITY_DATAWRITER_CRYPTO_TOKENS */


/* Begin CONST: GMCLASSID_SECURITY_DATAREADER_CRYPTO_TOKENS */


/* End CONST: GMCLASSID_SECURITY_DATAREADER_CRYPTO_TOKENS */


/* Begin CONST: RETCODE_NOT_ALLOWED_BY_SECURITY */


/* End CONST: RETCODE_NOT_ALLOWED_BY_SECURITY */


/* Begin TYPEDEF: DataTagQosPolicy */


/* End TYPEDEF: DataTagQosPolicy */


/* Begin STRUCT: ParticipantBuiltinTopicData */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::ParticipantBuiltinTopicData& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ParticipantBuiltinTopicData& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ParticipantBuiltinTopicData& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::ParticipantBuiltinTopicData>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::ParticipantBuiltinTopicData*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: ParticipantBuiltinTopicData */


/* Begin STRUCT: ParticipantBuiltinTopicDataSecure */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::ParticipantBuiltinTopicDataSecure& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ParticipantBuiltinTopicDataSecure& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ParticipantBuiltinTopicDataSecure& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::ParticipantBuiltinTopicDataSecure>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::ParticipantBuiltinTopicDataSecure*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: ParticipantBuiltinTopicDataSecure */


/* Begin STRUCT: PublicationBuiltinTopicData */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::PublicationBuiltinTopicData& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::PublicationBuiltinTopicData& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::PublicationBuiltinTopicData& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::PublicationBuiltinTopicData>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::PublicationBuiltinTopicData*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: PublicationBuiltinTopicData */


/* Begin STRUCT: SubscriptionBuiltinTopicData */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::SubscriptionBuiltinTopicData& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::SubscriptionBuiltinTopicData& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::SubscriptionBuiltinTopicData& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::SubscriptionBuiltinTopicData>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::SubscriptionBuiltinTopicData*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: SubscriptionBuiltinTopicData */


/* Begin STRUCT: PublicationBuiltinTopicDataSecure */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::PublicationBuiltinTopicDataSecure& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::PublicationBuiltinTopicDataSecure& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::PublicationBuiltinTopicDataSecure& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::PublicationBuiltinTopicDataSecure>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::PublicationBuiltinTopicDataSecure*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: PublicationBuiltinTopicDataSecure */


/* Begin STRUCT: SubscriptionBuiltinTopicDataSecure */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::SubscriptionBuiltinTopicDataSecure& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::SubscriptionBuiltinTopicDataSecure& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::SubscriptionBuiltinTopicDataSecure& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::SubscriptionBuiltinTopicDataSecure>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::SubscriptionBuiltinTopicDataSecure*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: SubscriptionBuiltinTopicDataSecure */


/* Begin STRUCT: SecurityException */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::SecurityException& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::SecurityException& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::SecurityException& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::SecurityException>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::SecurityException*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: SecurityException */


/* Begin ENUM: ValidationResult_t */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ValidationResult_t& enumval);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ValidationResult_t& enumval);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

extern const char* gen_DDS_Security_ValidationResult_t_names[];
}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End ENUM: ValidationResult_t */


/* Begin TYPEDEF: IdentityHandle */


/* End TYPEDEF: IdentityHandle */


/* Begin TYPEDEF: HandshakeHandle */


/* End TYPEDEF: HandshakeHandle */


/* Begin TYPEDEF: PermissionsHandle */


/* End TYPEDEF: PermissionsHandle */


/* Begin INTERFACE: SharedSecretHandle */


/* End INTERFACE: SharedSecretHandle */


/* Begin TYPEDEF: ParticipantCryptoHandle */


/* End TYPEDEF: ParticipantCryptoHandle */


/* Begin TYPEDEF: ParticipantCryptoHandleSeq */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::ParticipantCryptoHandleSeq& seq, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ParticipantCryptoHandleSeq& seq);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ParticipantCryptoHandleSeq& seq);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::ParticipantCryptoHandleSeq*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End TYPEDEF: ParticipantCryptoHandleSeq */


/* Begin TYPEDEF: NativeCryptoHandle */


/* End TYPEDEF: NativeCryptoHandle */


/* Begin TYPEDEF: DatawriterCryptoHandle */


/* End TYPEDEF: DatawriterCryptoHandle */


/* Begin TYPEDEF: DatawriterCryptoHandleSeq */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::DatawriterCryptoHandleSeq& seq, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::DatawriterCryptoHandleSeq& seq);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::DatawriterCryptoHandleSeq& seq);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::DatawriterCryptoHandleSeq*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End TYPEDEF: DatawriterCryptoHandleSeq */


/* Begin TYPEDEF: DatareaderCryptoHandle */


/* End TYPEDEF: DatareaderCryptoHandle */


/* Begin TYPEDEF: DatareaderCryptoHandleSeq */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::DatareaderCryptoHandleSeq& seq, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::DatareaderCryptoHandleSeq& seq);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::DatareaderCryptoHandleSeq& seq);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::DatareaderCryptoHandleSeq*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End TYPEDEF: DatareaderCryptoHandleSeq */


/* Begin INTERFACE-FWD: Authentication */


/* End INTERFACE-FWD: Authentication */


/* Begin ENUM: AuthStatusKind */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::AuthStatusKind& enumval);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::AuthStatusKind& enumval);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

extern const char* gen_DDS_Security_AuthStatusKind_names[];
}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End ENUM: AuthStatusKind */


/* Begin INTERFACE: AuthenticationListener */


/* End INTERFACE: AuthenticationListener */


/* Begin TYPEDEF: DomainId_t */


/* End TYPEDEF: DomainId_t */


/* Begin INTERFACE: Authentication */


/* End INTERFACE: Authentication */


/* Begin STRUCT: ParticipantSecurityAttributes */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::ParticipantSecurityAttributes& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ParticipantSecurityAttributes& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ParticipantSecurityAttributes& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::ParticipantSecurityAttributes>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::ParticipantSecurityAttributes*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: ParticipantSecurityAttributes */


/* Begin STRUCT: TopicSecurityAttributes */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::TopicSecurityAttributes& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::TopicSecurityAttributes& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::TopicSecurityAttributes& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::TopicSecurityAttributes>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::TopicSecurityAttributes*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: TopicSecurityAttributes */


/* Begin STRUCT: EndpointSecurityAttributes */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::EndpointSecurityAttributes& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::EndpointSecurityAttributes& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::EndpointSecurityAttributes& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::EndpointSecurityAttributes>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::EndpointSecurityAttributes*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: EndpointSecurityAttributes */


/* Begin INTERFACE-FWD: AccessControl */


/* End INTERFACE-FWD: AccessControl */


/* Begin INTERFACE: AccessControlListener */


/* End INTERFACE: AccessControlListener */


/* Begin INTERFACE: AccessControl */


/* End INTERFACE: AccessControl */


/* Begin INTERFACE: CryptoKeyFactory */


/* End INTERFACE: CryptoKeyFactory */


/* Begin INTERFACE: CryptoKeyExchange */


/* End INTERFACE: CryptoKeyExchange */


/* Begin ENUM: SecureSubmessageCategory_t */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::SecureSubmessageCategory_t& enumval);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::SecureSubmessageCategory_t& enumval);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

extern const char* gen_DDS_Security_SecureSubmessageCategory_t_names[];
}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End ENUM: SecureSubmessageCategory_t */


/* Begin INTERFACE: CryptoTransform */


/* End INTERFACE: CryptoTransform */

/* End MODULE: Security */

/* End MODULE: DDS */
#endif /* OPENDDS_IDL_GENERATED_DDSSECURITYCORETYPESUPPORTIMPL_H_LM8OUE */
