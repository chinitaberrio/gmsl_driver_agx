// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_DDSDCPSSUBSCRIPTIONEXTC_GT4VO8_H_
#define _TAO_IDL_DDSDCPSSUBSCRIPTIONEXTC_GT4VO8_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "dds/DCPS/dcps_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"
#include /**/ "dds/Versioned_Namespace.h"

#include "dds/DdsDcpsSubscriptionC.h"
#include "dds/DdsDcpsGuidC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO OpenDDS_Dcps_Export

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace OpenDDS
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace DCPS
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SubscriptionLostStatus;

    typedef
      ::TAO_Var_Var_T<
          SubscriptionLostStatus
        >
      SubscriptionLostStatus_var;

    typedef
      ::TAO_Out_T<
          SubscriptionLostStatus
        >
      SubscriptionLostStatus_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export SubscriptionLostStatus
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubscriptionLostStatus_var _var_type;
      typedef SubscriptionLostStatus_out _out_type;
      
      DDS::InstanceHandleSeq publication_handles;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef SubscriptionLostStatus SubscriptionDisconnectedStatus;
    typedef SubscriptionLostStatus_var SubscriptionDisconnectedStatus_var;
    typedef SubscriptionLostStatus_out SubscriptionDisconnectedStatus_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef SubscriptionLostStatus SubscriptionReconnectedStatus;
    typedef SubscriptionLostStatus_var SubscriptionReconnectedStatus_var;
    typedef SubscriptionLostStatus_out SubscriptionReconnectedStatus_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct BudgetExceededStatus;

    typedef
      ::TAO_Fixed_Var_T<
          BudgetExceededStatus
        >
      BudgetExceededStatus_var;

    typedef
      BudgetExceededStatus &
      BudgetExceededStatus_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export BudgetExceededStatus
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef BudgetExceededStatus_var _var_type;
      typedef BudgetExceededStatus_out _out_type;
      
      ::CORBA::Long total_count;
      ::CORBA::Long total_count_change;
      DDS::InstanceHandle_t last_instance_handle;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct LatencyStatistics;

    typedef
      ::TAO_Fixed_Var_T<
          LatencyStatistics
        >
      LatencyStatistics_var;

    typedef
      LatencyStatistics &
      LatencyStatistics_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export LatencyStatistics
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LatencyStatistics_var _var_type;
      typedef LatencyStatistics_out _out_type;
      
      OpenDDS::DCPS::GUID_t publication;
      ::CORBA::ULong n;
      ::CORBA::Double maximum;
      ::CORBA::Double minimum;
      ::CORBA::Double mean;
      ::CORBA::Double variance;
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_OPENDDS_DCPS_DATAREADERLISTENER__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADERLISTENER__VAR_OUT_CH_

    class DataReaderListener;
    typedef DataReaderListener *DataReaderListener_ptr;

    typedef
      TAO_Objref_Var_T<
          DataReaderListener
        >
      DataReaderListener_var;
    
    typedef
      TAO_Objref_Out_T<
          DataReaderListener
        >
      DataReaderListener_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export DataReaderListener
      : public virtual ::DDS::DataReaderListener
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef DataReaderListener_ptr _ptr_type;
      typedef DataReaderListener_var _var_type;
      typedef DataReaderListener_out _out_type;

      // The static operations.
      static DataReaderListener_ptr _duplicate (DataReaderListener_ptr obj);

      static void _tao_release (DataReaderListener_ptr obj);

      static DataReaderListener_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderListener_ptr _nil (void);

      virtual void on_subscription_disconnected (
        ::DDS::DataReader_ptr reader,
        const ::OpenDDS::DCPS::SubscriptionDisconnectedStatus & status) = 0;

      virtual void on_subscription_reconnected (
        ::DDS::DataReader_ptr reader,
        const ::OpenDDS::DCPS::SubscriptionReconnectedStatus & status) = 0;

      virtual void on_subscription_lost (
        ::DDS::DataReader_ptr reader,
        const ::OpenDDS::DCPS::SubscriptionLostStatus & status) = 0;

      virtual void on_budget_exceeded (
        ::DDS::DataReader_ptr reader,
        const ::OpenDDS::DCPS::BudgetExceededStatus & status) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderListener (void);

      

      virtual ~DataReaderListener (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      DataReaderListener (const DataReaderListener &);

      void operator= (const DataReaderListener &);
    };

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_OPENDDS_DCPS_LATENCYSTATISTICSSEQ_CH_)
#define _OPENDDS_DCPS_LATENCYSTATISTICSSEQ_CH_

    class LatencyStatisticsSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          LatencyStatisticsSeq
        >
      LatencyStatisticsSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          LatencyStatisticsSeq
        >
      LatencyStatisticsSeq_out;

    class OpenDDS_Dcps_Export LatencyStatisticsSeq
      : public
          ::TAO::unbounded_value_sequence<
              LatencyStatistics
            >
    {
    public:
      LatencyStatisticsSeq (void);
      LatencyStatisticsSeq ( ::CORBA::ULong max);
      LatencyStatisticsSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        LatencyStatistics* buffer,
        ::CORBA::Boolean release = false);
      LatencyStatisticsSeq (const LatencyStatisticsSeq &);
      virtual ~LatencyStatisticsSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef LatencyStatisticsSeq_var _var_type;
      typedef LatencyStatisticsSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_OPENDDS_DCPS_DATAREADEREX__VAR_OUT_CH_)
#define _OPENDDS_DCPS_DATAREADEREX__VAR_OUT_CH_

    class DataReaderEx;
    typedef DataReaderEx *DataReaderEx_ptr;

    typedef
      TAO_Objref_Var_T<
          DataReaderEx
        >
      DataReaderEx_var;
    
    typedef
      TAO_Objref_Out_T<
          DataReaderEx
        >
      DataReaderEx_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export DataReaderEx
      : public virtual ::DDS::DataReader
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef DataReaderEx_ptr _ptr_type;
      typedef DataReaderEx_var _var_type;
      typedef DataReaderEx_out _out_type;

      // The static operations.
      static DataReaderEx_ptr _duplicate (DataReaderEx_ptr obj);

      static void _tao_release (DataReaderEx_ptr obj);

      static DataReaderEx_ptr _narrow (::CORBA::Object_ptr obj);
      static DataReaderEx_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DataReaderEx_ptr _nil (void);

      virtual void get_latency_stats (
        ::OpenDDS::DCPS::LatencyStatisticsSeq & stats) = 0;

      virtual void reset_latency_stats (
        void) = 0;

      virtual ::CORBA::Boolean statistics_enabled (
        void) = 0;

      virtual void statistics_enabled (
        ::CORBA::Boolean statistics_enabled) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DataReaderEx (void);

      

      virtual ~DataReaderEx (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      DataReaderEx (const DataReaderEx &);

      void operator= (const DataReaderEx &);
    };
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module OpenDDS::DCPS

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module OpenDDS

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::OpenDDS::DCPS::SubscriptionLostStatus>
    : public
        Var_Size_Arg_Traits_T<
            ::OpenDDS::DCPS::SubscriptionLostStatus,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::OpenDDS::DCPS::BudgetExceededStatus>
    : public
        Fixed_Size_Arg_Traits_T<
            ::OpenDDS::DCPS::BudgetExceededStatus,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::OpenDDS::DCPS::LatencyStatistics>
    : public
        Fixed_Size_Arg_Traits_T<
            ::OpenDDS::DCPS::LatencyStatistics,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::OpenDDS::DCPS::LatencyStatisticsSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::OpenDDS::DCPS::LatencyStatisticsSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_OPENDDS_DCPS_DATAREADERLISTENER__TRAITS_)
#define _OPENDDS_DCPS_DATAREADERLISTENER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderListener>
  {
    static ::OpenDDS::DCPS::DataReaderListener_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderListener_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderListener_ptr p);
    static ::OpenDDS::DCPS::DataReaderListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_OPENDDS_DCPS_DATAREADEREX__TRAITS_)
#define _OPENDDS_DCPS_DATAREADEREX__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::OpenDDS::DCPS::DataReaderEx>
  {
    static ::OpenDDS::DCPS::DataReaderEx_ptr duplicate (
        ::OpenDDS::DCPS::DataReaderEx_ptr p);
    static void release (
        ::OpenDDS::DCPS::DataReaderEx_ptr p);
    static ::OpenDDS::DCPS::DataReaderEx_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OpenDDS::DCPS::DataReaderEx_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OpenDDS::DCPS::SubscriptionLostStatus &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OpenDDS::DCPS::SubscriptionLostStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OpenDDS::DCPS::BudgetExceededStatus &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OpenDDS::DCPS::BudgetExceededStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OpenDDS::DCPS::LatencyStatistics &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, OpenDDS::DCPS::LatencyStatistics &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_OpenDDS_DCPS_LatencyStatisticsSeq_H_
#define _TAO_CDR_OP_OpenDDS_DCPS_LatencyStatisticsSeq_H_

OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const OpenDDS::DCPS::LatencyStatisticsSeq &_tao_sequence);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    OpenDDS::DCPS::LatencyStatisticsSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_OpenDDS_DCPS_LatencyStatisticsSeq_H_ */

// TAO_IDL - Generated from
// be/be_codegen.cpp:1703


OPENDDS_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "DdsDcpsSubscriptionExtC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

