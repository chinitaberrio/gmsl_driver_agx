// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:461

#ifndef _TAO_IDL_FEDERATORS_8BC5TT_H_
#define _TAO_IDL_FEDERATORS_8BC5TT_H_

#include /**/ "ace/pre.h"

#include "FederatorC.h"
#include "dds/DCPS/InfoRepoDiscovery/InfoS.h"
#include "dds/DdsDcpsGuidS.h"
#include "tao/OctetSeqS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class SArg_Traits< ::OpenDDS::Federator::UpdateType>
    : public
        Basic_SArg_Traits_T<
            ::OpenDDS::Federator::UpdateType,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::OpenDDS::Federator::OwnerUpdate>
    : public
        Fixed_Size_SArg_Traits_T<
            ::OpenDDS::Federator::OwnerUpdate,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::OpenDDS::Federator::TopicUpdate>
    : public
        Var_Size_SArg_Traits_T<
            ::OpenDDS::Federator::TopicUpdate,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::OpenDDS::Federator::ParticipantUpdate>
    : public
        Var_Size_SArg_Traits_T<
            ::OpenDDS::Federator::ParticipantUpdate,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::OpenDDS::Federator::PublicationUpdate>
    : public
        Var_Size_SArg_Traits_T<
            ::OpenDDS::Federator::PublicationUpdate,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::OpenDDS::Federator::SubscriptionUpdate>
    : public
        Var_Size_SArg_Traits_T<
            ::OpenDDS::Federator::SubscriptionUpdate,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_OPENDDS_FEDERATOR_MANAGER__SARG_TRAITS_)
#define _OPENDDS_FEDERATOR_MANAGER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::OpenDDS::Federator::Manager>
    : public
        Object_SArg_Traits_T<
            ::OpenDDS::Federator::Manager_ptr,
            ::OpenDDS::Federator::Manager_var,
            ::OpenDDS::Federator::Manager_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:38

namespace POA_OpenDDS
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:38

  namespace Federator
  {
    

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_sh.cpp:76

    class Manager;
    typedef Manager *Manager_ptr;

    class OpenDDS_Federator_Export Manager
      : public virtual PortableServer::ServantBase
    {
    protected:
      Manager (void);
    
    public:
      /// Useful for template programming.
      typedef ::OpenDDS::Federator::Manager _stub_type;
      typedef ::OpenDDS::Federator::Manager_ptr _stub_ptr_type;
      typedef ::OpenDDS::Federator::Manager_var _stub_var_type;

      Manager (const Manager& rhs);
      virtual ~Manager (void);

      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest & req,
          TAO::Portable_Server::Servant_Upcall *servant_upcall);
      
      ::OpenDDS::Federator::Manager *_this (void);
      
      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual ::CORBA::Boolean discover_federation (
        const char * ior) = 0;

      static void discover_federation_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual ::OpenDDS::Federator::Manager_ptr join_federation (
        ::OpenDDS::Federator::Manager_ptr peer,
        ::OpenDDS::Federator::FederationDomain federation) = 0;

      static void join_federation_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void leave_federation (
        ::OpenDDS::Federator::RepoKey id) = 0;

      static void leave_federation_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual ::OpenDDS::Federator::RepoKey federation_id (
        void) = 0;

      static void federation_id_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual ::OpenDDS::DCPS::DCPSInfo_ptr repository (
        void) = 0;

      static void repository_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void initializeOwner (
        const ::OpenDDS::Federator::OwnerUpdate & data) = 0;

      static void initializeOwner_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void initializeTopic (
        const ::OpenDDS::Federator::TopicUpdate & data) = 0;

      static void initializeTopic_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void initializeParticipant (
        const ::OpenDDS::Federator::ParticipantUpdate & data) = 0;

      static void initializeParticipant_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void initializePublication (
        const ::OpenDDS::Federator::PublicationUpdate & data) = 0;

      static void initializePublication_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void initializeSubscription (
        const ::OpenDDS::Federator::SubscriptionUpdate & data) = 0;

      static void initializeSubscription_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void leave_and_shutdown (
        void) = 0;

      static void leave_and_shutdown_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:39

      virtual void shutdown (
        void) = 0;

      static void shutdown_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
    };
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:69

  } // module OpenDDS::Federator

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:69

} // module OpenDDS

OPENDDS_END_VERSIONED_NAMESPACE_DECL



#include /**/ "ace/post.h"

#endif /* ifndef */

