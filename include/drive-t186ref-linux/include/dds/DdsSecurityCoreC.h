// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_DDSSECURITYCOREC_HLFHHP_H_
#define _TAO_IDL_DDSSECURITYCOREC_HLFHHP_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "dds/DCPS/dcps_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"
#include /**/ "dds/Versioned_Namespace.h"

#include "DdsDcpsGuidC.h"
#include "DdsDcpsInfrastructureC.h"
#include "DdsDcpsPublicationC.h"
#include "DdsDcpsSubscriptionC.h"
#include "DdsSecurityParamsC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO OpenDDS_Dcps_Export

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace DDS
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace Security
  {

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_DYNAMICDATA__VAR_OUT_CH_)
#define _DDS_SECURITY_DYNAMICDATA__VAR_OUT_CH_

    class DynamicData;
    typedef DynamicData *DynamicData_ptr;

    typedef
      TAO_Objref_Var_T<
          DynamicData
        >
      DynamicData_var;
    
    typedef
      TAO_Objref_Out_T<
          DynamicData
        >
      DynamicData_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export DynamicData
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef DynamicData_ptr _ptr_type;
      typedef DynamicData_var _var_type;
      typedef DynamicData_out _out_type;

      // The static operations.
      static DynamicData_ptr _duplicate (DynamicData_ptr obj);

      static void _tao_release (DynamicData_ptr obj);

      static DynamicData_ptr _narrow (::CORBA::Object_ptr obj);
      static DynamicData_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static DynamicData_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      DynamicData (void);

      

      virtual ~DynamicData (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      DynamicData (const DynamicData &);

      void operator= (const DynamicData &);
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef DDS::Property_t Property_t;
    typedef DDS::Property_t_var Property_t_var;
    typedef DDS::Property_t_out Property_t_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:466

    typedef DDS::PropertySeq PropertySeq;
    typedef DDS::PropertySeq_var PropertySeq_var;
    typedef DDS::PropertySeq_out PropertySeq_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef DDS::BinaryProperty_t BinaryProperty_t;
    typedef DDS::BinaryProperty_t_var BinaryProperty_t_var;
    typedef DDS::BinaryProperty_t_out BinaryProperty_t_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:466

    typedef DDS::BinaryPropertySeq BinaryPropertySeq;
    typedef DDS::BinaryPropertySeq_var BinaryPropertySeq_var;
    typedef DDS::BinaryPropertySeq_out BinaryPropertySeq_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef DDS::PropertyQosPolicy PropertyQosPolicy;
    typedef DDS::PropertyQosPolicy_var PropertyQosPolicy_var;
    typedef DDS::PropertyQosPolicy_out PropertyQosPolicy_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token MessageToken;
    typedef Token_var MessageToken_var;
    typedef Token_out MessageToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef MessageToken AuthRequestMessageToken;
    typedef MessageToken_var AuthRequestMessageToken_var;
    typedef MessageToken_out AuthRequestMessageToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef MessageToken HandshakeMessageToken;
    typedef MessageToken_var HandshakeMessageToken_var;
    typedef MessageToken_out HandshakeMessageToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token AuthenticatedPeerCredentialToken;
    typedef Token_var AuthenticatedPeerCredentialToken_var;
    typedef Token_out AuthenticatedPeerCredentialToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token PermissionsCredentialToken;
    typedef Token_var PermissionsCredentialToken_var;
    typedef Token_out PermissionsCredentialToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token CryptoToken;
    typedef Token_var CryptoToken_var;
    typedef Token_out CryptoToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_SECURITY_CRYPTOTOKENSEQ_CH_)
#define _DDS_SECURITY_CRYPTOTOKENSEQ_CH_

    class CryptoTokenSeq;

    typedef
      ::TAO_VarSeq_Var_T<
          CryptoTokenSeq
        >
      CryptoTokenSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          CryptoTokenSeq
        >
      CryptoTokenSeq_out;

    class OpenDDS_Dcps_Export CryptoTokenSeq
      : public
          ::TAO::unbounded_value_sequence<
              CryptoToken
            >
    {
    public:
      CryptoTokenSeq (void);
      CryptoTokenSeq ( ::CORBA::ULong max);
      CryptoTokenSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        CryptoToken* buffer,
        ::CORBA::Boolean release = false);
      CryptoTokenSeq (const CryptoTokenSeq &);
      virtual ~CryptoTokenSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef CryptoTokenSeq_var _var_type;
      typedef CryptoTokenSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token ParticipantCryptoToken;
    typedef Token_var ParticipantCryptoToken_var;
    typedef Token_out ParticipantCryptoToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token DatawriterCryptoToken;
    typedef Token_var DatawriterCryptoToken_var;
    typedef Token_out DatawriterCryptoToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef Token DatareaderCryptoToken;
    typedef Token_var DatareaderCryptoToken_var;
    typedef Token_out DatareaderCryptoToken_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:466

    typedef CryptoTokenSeq ParticipantCryptoTokenSeq;
    typedef CryptoTokenSeq_var ParticipantCryptoTokenSeq_var;
    typedef CryptoTokenSeq_out ParticipantCryptoTokenSeq_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:466

    typedef CryptoTokenSeq DatawriterCryptoTokenSeq;
    typedef CryptoTokenSeq_var DatawriterCryptoTokenSeq_var;
    typedef CryptoTokenSeq_out DatawriterCryptoTokenSeq_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:466

    typedef CryptoTokenSeq DatareaderCryptoTokenSeq;
    typedef CryptoTokenSeq_var DatareaderCryptoTokenSeq_var;
    typedef CryptoTokenSeq_out DatareaderCryptoTokenSeq_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct MessageIdentity;

    typedef
      ::TAO_Fixed_Var_T<
          MessageIdentity
        >
      MessageIdentity_var;

    typedef
      MessageIdentity &
      MessageIdentity_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export MessageIdentity
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef MessageIdentity_var _var_type;
      typedef MessageIdentity_out _out_type;
      
      OpenDDS::DCPS::GUID_t source_guid;
      ::CORBA::LongLong sequence_number;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:407

    typedef char * GenericMessageClassId;
    typedef ::CORBA::String_var GenericMessageClassId_var;
    typedef ::CORBA::String_out GenericMessageClassId_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ParticipantGenericMessage;

    typedef
      ::TAO_Var_Var_T<
          ParticipantGenericMessage
        >
      ParticipantGenericMessage_var;

    typedef
      ::TAO_Out_T<
          ParticipantGenericMessage
        >
      ParticipantGenericMessage_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export ParticipantGenericMessage
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParticipantGenericMessage_var _var_type;
      typedef ParticipantGenericMessage_out _out_type;
      
      DDS::Security::MessageIdentity message_identity;
      DDS::Security::MessageIdentity related_message_identity;
      OpenDDS::DCPS::GUID_t destination_participant_guid;
      OpenDDS::DCPS::GUID_t destination_endpoint_guid;
      OpenDDS::DCPS::GUID_t source_endpoint_guid;
      ::TAO::String_Manager message_class_id;
      DDS::Security::DataHolderSeq message_data;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef ParticipantGenericMessage ParticipantStatelessMessage;
    typedef ParticipantGenericMessage_var ParticipantStatelessMessage_var;
    typedef ParticipantGenericMessage_out ParticipantStatelessMessage_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef ParticipantGenericMessage ParticipantVolatileMessageSecure;
    typedef ParticipantGenericMessage_var ParticipantVolatileMessageSecure_var;
    typedef ParticipantGenericMessage_out ParticipantVolatileMessageSecure_out;

    // TAO_IDL - Generated from
    // be/be_visitor_constant/constant_ch.cpp:38

    const char *const GMCLASSID_SECURITY_AUTH_REQUEST = "dds.sec.auth_request";

    // TAO_IDL - Generated from
    // be/be_visitor_constant/constant_ch.cpp:38

    const char *const GMCLASSID_SECURITY_AUTH_HANDSHAKE = "dds.sec.auth";

    // TAO_IDL - Generated from
    // be/be_visitor_constant/constant_ch.cpp:38

    const char *const GMCLASSID_SECURITY_PARTICIPANT_CRYPTO_TOKENS = "dds.sec.participant_crypto_tokens";

    // TAO_IDL - Generated from
    // be/be_visitor_constant/constant_ch.cpp:38

    const char *const GMCLASSID_SECURITY_DATAWRITER_CRYPTO_TOKENS = "dds.sec.datawriter_crypto_tokens";

    // TAO_IDL - Generated from
    // be/be_visitor_constant/constant_ch.cpp:38

    const char *const GMCLASSID_SECURITY_DATAREADER_CRYPTO_TOKENS = "dds.sec.datareader_crypto_tokens";

    // TAO_IDL - Generated from
    // be/be_visitor_constant/constant_ch.cpp:38

    const CORBA::Long RETCODE_NOT_ALLOWED_BY_SECURITY = 1000;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:513

    typedef DataTags DataTagQosPolicy;
    typedef DataTags_var DataTagQosPolicy_var;
    typedef DataTags_out DataTagQosPolicy_out;

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ParticipantBuiltinTopicData;

    typedef
      ::TAO_Var_Var_T<
          ParticipantBuiltinTopicData
        >
      ParticipantBuiltinTopicData_var;

    typedef
      ::TAO_Out_T<
          ParticipantBuiltinTopicData
        >
      ParticipantBuiltinTopicData_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export ParticipantBuiltinTopicData
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParticipantBuiltinTopicData_var _var_type;
      typedef ParticipantBuiltinTopicData_out _out_type;
      
      DDS::ParticipantBuiltinTopicData base;
      DDS::Security::IdentityToken identity_token;
      DDS::Security::PermissionsToken permissions_token;
      DDS::Security::PropertyQosPolicy property;
      DDS::Security::ParticipantSecurityInfo security_info;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ParticipantBuiltinTopicDataSecure;

    typedef
      ::TAO_Var_Var_T<
          ParticipantBuiltinTopicDataSecure
        >
      ParticipantBuiltinTopicDataSecure_var;

    typedef
      ::TAO_Out_T<
          ParticipantBuiltinTopicDataSecure
        >
      ParticipantBuiltinTopicDataSecure_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export ParticipantBuiltinTopicDataSecure
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParticipantBuiltinTopicDataSecure_var _var_type;
      typedef ParticipantBuiltinTopicDataSecure_out _out_type;
      
      DDS::Security::ParticipantBuiltinTopicData base;
      DDS::Security::IdentityStatusToken identity_status_token;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct PublicationBuiltinTopicData;

    typedef
      ::TAO_Var_Var_T<
          PublicationBuiltinTopicData
        >
      PublicationBuiltinTopicData_var;

    typedef
      ::TAO_Out_T<
          PublicationBuiltinTopicData
        >
      PublicationBuiltinTopicData_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export PublicationBuiltinTopicData
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PublicationBuiltinTopicData_var _var_type;
      typedef PublicationBuiltinTopicData_out _out_type;
      
      DDS::PublicationBuiltinTopicData base;
      DDS::Security::EndpointSecurityInfo security_info;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SubscriptionBuiltinTopicData;

    typedef
      ::TAO_Var_Var_T<
          SubscriptionBuiltinTopicData
        >
      SubscriptionBuiltinTopicData_var;

    typedef
      ::TAO_Out_T<
          SubscriptionBuiltinTopicData
        >
      SubscriptionBuiltinTopicData_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export SubscriptionBuiltinTopicData
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubscriptionBuiltinTopicData_var _var_type;
      typedef SubscriptionBuiltinTopicData_out _out_type;
      
      DDS::SubscriptionBuiltinTopicData base;
      DDS::Security::EndpointSecurityInfo security_info;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct PublicationBuiltinTopicDataSecure;

    typedef
      ::TAO_Var_Var_T<
          PublicationBuiltinTopicDataSecure
        >
      PublicationBuiltinTopicDataSecure_var;

    typedef
      ::TAO_Out_T<
          PublicationBuiltinTopicDataSecure
        >
      PublicationBuiltinTopicDataSecure_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export PublicationBuiltinTopicDataSecure
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef PublicationBuiltinTopicDataSecure_var _var_type;
      typedef PublicationBuiltinTopicDataSecure_out _out_type;
      
      DDS::Security::PublicationBuiltinTopicData base;
      DDS::Security::DataTags data_tags;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SubscriptionBuiltinTopicDataSecure;

    typedef
      ::TAO_Var_Var_T<
          SubscriptionBuiltinTopicDataSecure
        >
      SubscriptionBuiltinTopicDataSecure_var;

    typedef
      ::TAO_Out_T<
          SubscriptionBuiltinTopicDataSecure
        >
      SubscriptionBuiltinTopicDataSecure_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export SubscriptionBuiltinTopicDataSecure
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SubscriptionBuiltinTopicDataSecure_var _var_type;
      typedef SubscriptionBuiltinTopicDataSecure_out _out_type;
      
      DDS::Security::SubscriptionBuiltinTopicData base;
      DDS::Security::DataTags data_tags;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct SecurityException;

    typedef
      ::TAO_Var_Var_T<
          SecurityException
        >
      SecurityException_var;

    typedef
      ::TAO_Out_T<
          SecurityException
        >
      SecurityException_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export SecurityException
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef SecurityException_var _var_type;
      typedef SecurityException_out _out_type;
      
      ::TAO::String_Manager message;
      ::CORBA::Long code;
      ::CORBA::Long minor_code;
    };

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum ValidationResult_t
    {
      VALIDATION_OK,
      VALIDATION_FAILED,
      VALIDATION_PENDING_RETRY,
      VALIDATION_PENDING_HANDSHAKE_REQUEST,
      VALIDATION_PENDING_HANDSHAKE_MESSAGE,
      VALIDATION_OK_FINAL_MESSAGE
    };

    typedef ValidationResult_t &ValidationResult_t_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef ::CORBA::Long IdentityHandle;
    typedef ::CORBA::Long_out IdentityHandle_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef ::CORBA::Long HandshakeHandle;
    typedef ::CORBA::Long_out HandshakeHandle_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef ::CORBA::Long PermissionsHandle;
    typedef ::CORBA::Long_out PermissionsHandle_out;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_SHAREDSECRETHANDLE__VAR_OUT_CH_)
#define _DDS_SECURITY_SHAREDSECRETHANDLE__VAR_OUT_CH_

    class SharedSecretHandle;
    typedef SharedSecretHandle *SharedSecretHandle_ptr;

    typedef
      TAO_Objref_Var_T<
          SharedSecretHandle
        >
      SharedSecretHandle_var;
    
    typedef
      TAO_Objref_Out_T<
          SharedSecretHandle
        >
      SharedSecretHandle_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export SharedSecretHandle
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef SharedSecretHandle_ptr _ptr_type;
      typedef SharedSecretHandle_var _var_type;
      typedef SharedSecretHandle_out _out_type;

      // The static operations.
      static SharedSecretHandle_ptr _duplicate (SharedSecretHandle_ptr obj);

      static void _tao_release (SharedSecretHandle_ptr obj);

      static SharedSecretHandle_ptr _narrow (::CORBA::Object_ptr obj);
      static SharedSecretHandle_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static SharedSecretHandle_ptr _nil (void);

      virtual ::DDS::OctetSeq * challenge1 (
        void) = 0;

      virtual ::DDS::OctetSeq * challenge2 (
        void) = 0;

      virtual ::DDS::OctetSeq * sharedSecret (
        void) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      SharedSecretHandle (void);

      

      virtual ~SharedSecretHandle (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      SharedSecretHandle (const SharedSecretHandle &);

      void operator= (const SharedSecretHandle &);
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef ::CORBA::Long ParticipantCryptoHandle;
    typedef ::CORBA::Long_out ParticipantCryptoHandle_out;

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_SECURITY_PARTICIPANTCRYPTOHANDLESEQ_CH_)
#define _DDS_SECURITY_PARTICIPANTCRYPTOHANDLESEQ_CH_

    class ParticipantCryptoHandleSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          ParticipantCryptoHandleSeq
        >
      ParticipantCryptoHandleSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          ParticipantCryptoHandleSeq
        >
      ParticipantCryptoHandleSeq_out;

    class OpenDDS_Dcps_Export ParticipantCryptoHandleSeq
      : public
          ::TAO::unbounded_value_sequence<
              ParticipantCryptoHandle
            >
    {
    public:
      ParticipantCryptoHandleSeq (void);
      ParticipantCryptoHandleSeq ( ::CORBA::ULong max);
      ParticipantCryptoHandleSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      ParticipantCryptoHandleSeq (const ParticipantCryptoHandleSeq &);
      virtual ~ParticipantCryptoHandleSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParticipantCryptoHandleSeq_var _var_type;
      typedef ParticipantCryptoHandleSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef ::CORBA::Long NativeCryptoHandle;
    typedef ::CORBA::Long_out NativeCryptoHandle_out;

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef NativeCryptoHandle DatawriterCryptoHandle;
    typedef NativeCryptoHandle_out DatawriterCryptoHandle_out;

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_SECURITY_DATAWRITERCRYPTOHANDLESEQ_CH_)
#define _DDS_SECURITY_DATAWRITERCRYPTOHANDLESEQ_CH_

    class DatawriterCryptoHandleSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DatawriterCryptoHandleSeq
        >
      DatawriterCryptoHandleSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DatawriterCryptoHandleSeq
        >
      DatawriterCryptoHandleSeq_out;

    class OpenDDS_Dcps_Export DatawriterCryptoHandleSeq
      : public
          ::TAO::unbounded_value_sequence<
              DatawriterCryptoHandle
            >
    {
    public:
      DatawriterCryptoHandleSeq (void);
      DatawriterCryptoHandleSeq ( ::CORBA::ULong max);
      DatawriterCryptoHandleSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      DatawriterCryptoHandleSeq (const DatawriterCryptoHandleSeq &);
      virtual ~DatawriterCryptoHandleSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DatawriterCryptoHandleSeq_var _var_type;
      typedef DatawriterCryptoHandleSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef NativeCryptoHandle DatareaderCryptoHandle;
    typedef NativeCryptoHandle_out DatareaderCryptoHandle_out;

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_DDS_SECURITY_DATAREADERCRYPTOHANDLESEQ_CH_)
#define _DDS_SECURITY_DATAREADERCRYPTOHANDLESEQ_CH_

    class DatareaderCryptoHandleSeq;

    typedef
      ::TAO_FixedSeq_Var_T<
          DatareaderCryptoHandleSeq
        >
      DatareaderCryptoHandleSeq_var;

    typedef
      ::TAO_Seq_Out_T<
          DatareaderCryptoHandleSeq
        >
      DatareaderCryptoHandleSeq_out;

    class OpenDDS_Dcps_Export DatareaderCryptoHandleSeq
      : public
          ::TAO::unbounded_value_sequence<
              DatareaderCryptoHandle
            >
    {
    public:
      DatareaderCryptoHandleSeq (void);
      DatareaderCryptoHandleSeq ( ::CORBA::ULong max);
      DatareaderCryptoHandleSeq (
        ::CORBA::ULong max,
        ::CORBA::ULong length,
        ::CORBA::Long* buffer,
        ::CORBA::Boolean release = false);
      DatareaderCryptoHandleSeq (const DatareaderCryptoHandleSeq &);
      virtual ~DatareaderCryptoHandleSeq (void);
      

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef DatareaderCryptoHandleSeq_var _var_type;
      typedef DatareaderCryptoHandleSeq_out _out_type;
    };

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_AUTHENTICATION__VAR_OUT_CH_)
#define _DDS_SECURITY_AUTHENTICATION__VAR_OUT_CH_

    class Authentication;
    typedef Authentication *Authentication_ptr;

    typedef
      TAO_Objref_Var_T<
          Authentication
        >
      Authentication_var;
    
    typedef
      TAO_Objref_Out_T<
          Authentication
        >
      Authentication_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum AuthStatusKind
    {
      RESERVED_AUTH_STATUS_KIND_0,
      IDENTITY_STATUS
    };

    typedef AuthStatusKind &AuthStatusKind_out;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_AUTHENTICATIONLISTENER__VAR_OUT_CH_)
#define _DDS_SECURITY_AUTHENTICATIONLISTENER__VAR_OUT_CH_

    class AuthenticationListener;
    typedef AuthenticationListener *AuthenticationListener_ptr;

    typedef
      TAO_Objref_Var_T<
          AuthenticationListener
        >
      AuthenticationListener_var;
    
    typedef
      TAO_Objref_Out_T<
          AuthenticationListener
        >
      AuthenticationListener_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export AuthenticationListener
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef AuthenticationListener_ptr _ptr_type;
      typedef AuthenticationListener_var _var_type;
      typedef AuthenticationListener_out _out_type;

      // The static operations.
      static AuthenticationListener_ptr _duplicate (AuthenticationListener_ptr obj);

      static void _tao_release (AuthenticationListener_ptr obj);

      static AuthenticationListener_ptr _narrow (::CORBA::Object_ptr obj);
      static AuthenticationListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AuthenticationListener_ptr _nil (void);

      virtual ::CORBA::Boolean on_revoke_identity (
        ::DDS::Security::Authentication_ptr plugin,
        ::DDS::Security::IdentityHandle handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean on_status_changed (
        ::DDS::Security::Authentication_ptr plugin,
        ::DDS::Security::IdentityHandle handle,
        ::DDS::Security::AuthStatusKind status_kind,
        ::DDS::Security::SecurityException & ex) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AuthenticationListener (void);

      

      virtual ~AuthenticationListener (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      AuthenticationListener (const AuthenticationListener &);

      void operator= (const AuthenticationListener &);
    };

    // TAO_IDL - Generated from
    // be/be_visitor_typedef/typedef_ch.cpp:373

    typedef DDS::DomainId_t DomainId_t;
    typedef DDS::DomainId_t_out DomainId_t_out;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export Authentication
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef Authentication_ptr _ptr_type;
      typedef Authentication_var _var_type;
      typedef Authentication_out _out_type;

      // The static operations.
      static Authentication_ptr _duplicate (Authentication_ptr obj);

      static void _tao_release (Authentication_ptr obj);

      static Authentication_ptr _narrow (::CORBA::Object_ptr obj);
      static Authentication_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static Authentication_ptr _nil (void);

      virtual ::DDS::Security::ValidationResult_t validate_local_identity (
        ::DDS::Security::IdentityHandle & local_identity_handle,
        ::OpenDDS::DCPS::GUID_t & adjusted_participant_guid,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::DomainParticipantQos & participant_qos,
        const ::OpenDDS::DCPS::GUID_t & candidate_participant_guid,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_identity_token (
        ::DDS::Security::IdentityToken & identity_token,
        ::DDS::Security::IdentityHandle handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_identity_status_token (
        ::DDS::Security::IdentityStatusToken & identity_status_token,
        ::DDS::Security::IdentityHandle handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean set_permissions_credential_and_token (
        ::DDS::Security::IdentityHandle handle,
        const ::DDS::Security::PermissionsCredentialToken & permissions_credential,
        const ::DDS::Security::PermissionsToken & permissions_token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::ValidationResult_t validate_remote_identity (
        ::DDS::Security::IdentityHandle & remote_identity_handle,
        ::DDS::Security::AuthRequestMessageToken & local_auth_request_token,
        const ::DDS::Security::AuthRequestMessageToken & remote_auth_request_token,
        ::DDS::Security::IdentityHandle local_identity_handle,
        const ::DDS::Security::IdentityToken & remote_identity_token,
        const ::OpenDDS::DCPS::GUID_t & remote_participant_guid,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::ValidationResult_t begin_handshake_request (
        ::DDS::Security::HandshakeHandle & handshake_handle,
        ::DDS::Security::HandshakeMessageToken & handshake_message,
        ::DDS::Security::IdentityHandle initiator_identity_handle,
        ::DDS::Security::IdentityHandle replier_identity_handle,
        const ::DDS::OctetSeq & serialized_local_participant_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::ValidationResult_t begin_handshake_reply (
        ::DDS::Security::HandshakeHandle & handshake_handle,
        ::DDS::Security::HandshakeMessageToken & handshake_message_out,
        ::DDS::Security::IdentityHandle initiator_identity_handle,
        ::DDS::Security::IdentityHandle replier_identity_handle,
        const ::DDS::OctetSeq & serialized_local_participant_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::ValidationResult_t process_handshake (
        ::DDS::Security::HandshakeMessageToken & handshake_message_out,
        const ::DDS::Security::HandshakeMessageToken & handshake_message_in,
        ::DDS::Security::HandshakeHandle handshake_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::SharedSecretHandle_ptr get_shared_secret (
        ::DDS::Security::HandshakeHandle handshake_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_authenticated_peer_credential_token (
        ::DDS::Security::AuthenticatedPeerCredentialToken & peer_credential_token,
        ::DDS::Security::HandshakeHandle handshake_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean set_listener (
        ::DDS::Security::AuthenticationListener_ptr listener,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_identity_token (
        const ::DDS::Security::IdentityToken & token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_identity_status_token (
        const ::DDS::Security::IdentityStatusToken & token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_authenticated_peer_credential_token (
        const ::DDS::Security::AuthenticatedPeerCredentialToken & peer_credential_token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_handshake_handle (
        ::DDS::Security::HandshakeHandle handshake_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_identity_handle (
        ::DDS::Security::IdentityHandle identity_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_sharedsecret_handle (
        ::DDS::Security::SharedSecretHandle_ptr sharedsecret_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      Authentication (void);

      

      virtual ~Authentication (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      Authentication (const Authentication &);

      void operator= (const Authentication &);
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct ParticipantSecurityAttributes;

    typedef
      ::TAO_Var_Var_T<
          ParticipantSecurityAttributes
        >
      ParticipantSecurityAttributes_var;

    typedef
      ::TAO_Out_T<
          ParticipantSecurityAttributes
        >
      ParticipantSecurityAttributes_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export ParticipantSecurityAttributes
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef ParticipantSecurityAttributes_var _var_type;
      typedef ParticipantSecurityAttributes_out _out_type;
      
      ::CORBA::Boolean allow_unauthenticated_participants;
      ::CORBA::Boolean is_access_protected;
      ::CORBA::Boolean is_rtps_protected;
      ::CORBA::Boolean is_discovery_protected;
      ::CORBA::Boolean is_liveliness_protected;
      DDS::Security::PluginParticipantSecurityAttributesMask plugin_participant_attributes;
      DDS::Security::PropertySeq ac_endpoint_properties;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct TopicSecurityAttributes;

    typedef
      ::TAO_Fixed_Var_T<
          TopicSecurityAttributes
        >
      TopicSecurityAttributes_var;

    typedef
      TopicSecurityAttributes &
      TopicSecurityAttributes_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export TopicSecurityAttributes
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef TopicSecurityAttributes_var _var_type;
      typedef TopicSecurityAttributes_out _out_type;
      
      ::CORBA::Boolean is_read_protected;
      ::CORBA::Boolean is_write_protected;
      ::CORBA::Boolean is_discovery_protected;
      ::CORBA::Boolean is_liveliness_protected;
    };

    // TAO_IDL - Generated from
    // be/be_type.cpp:261

    struct EndpointSecurityAttributes;

    typedef
      ::TAO_Var_Var_T<
          EndpointSecurityAttributes
        >
      EndpointSecurityAttributes_var;

    typedef
      ::TAO_Out_T<
          EndpointSecurityAttributes
        >
      EndpointSecurityAttributes_out;

    // TAO_IDL - Generated from
    // be/be_visitor_structure/structure_ch.cpp:51

    struct OpenDDS_Dcps_Export EndpointSecurityAttributes
    {

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      
      typedef EndpointSecurityAttributes_var _var_type;
      typedef EndpointSecurityAttributes_out _out_type;
      
      DDS::Security::TopicSecurityAttributes base;
      ::CORBA::Boolean is_submessage_protected;
      ::CORBA::Boolean is_payload_protected;
      ::CORBA::Boolean is_key_protected;
      DDS::Security::PluginEndpointSecurityAttributesMask plugin_endpoint_attributes;
      DDS::Security::PropertySeq ac_endpoint_properties;
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_ACCESSCONTROL__VAR_OUT_CH_)
#define _DDS_SECURITY_ACCESSCONTROL__VAR_OUT_CH_

    class AccessControl;
    typedef AccessControl *AccessControl_ptr;

    typedef
      TAO_Objref_Var_T<
          AccessControl
        >
      AccessControl_var;
    
    typedef
      TAO_Objref_Out_T<
          AccessControl
        >
      AccessControl_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_ACCESSCONTROLLISTENER__VAR_OUT_CH_)
#define _DDS_SECURITY_ACCESSCONTROLLISTENER__VAR_OUT_CH_

    class AccessControlListener;
    typedef AccessControlListener *AccessControlListener_ptr;

    typedef
      TAO_Objref_Var_T<
          AccessControlListener
        >
      AccessControlListener_var;
    
    typedef
      TAO_Objref_Out_T<
          AccessControlListener
        >
      AccessControlListener_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export AccessControlListener
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef AccessControlListener_ptr _ptr_type;
      typedef AccessControlListener_var _var_type;
      typedef AccessControlListener_out _out_type;

      // The static operations.
      static AccessControlListener_ptr _duplicate (AccessControlListener_ptr obj);

      static void _tao_release (AccessControlListener_ptr obj);

      static AccessControlListener_ptr _narrow (::CORBA::Object_ptr obj);
      static AccessControlListener_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AccessControlListener_ptr _nil (void);

      virtual ::CORBA::Boolean on_revoke_permissions (
        ::DDS::Security::AccessControl_ptr plugin,
        ::DDS::Security::PermissionsHandle handle) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AccessControlListener (void);

      

      virtual ~AccessControlListener (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      AccessControlListener (const AccessControlListener &);

      void operator= (const AccessControlListener &);
    };

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export AccessControl
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef AccessControl_ptr _ptr_type;
      typedef AccessControl_var _var_type;
      typedef AccessControl_out _out_type;

      // The static operations.
      static AccessControl_ptr _duplicate (AccessControl_ptr obj);

      static void _tao_release (AccessControl_ptr obj);

      static AccessControl_ptr _narrow (::CORBA::Object_ptr obj);
      static AccessControl_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static AccessControl_ptr _nil (void);

      virtual ::DDS::Security::PermissionsHandle validate_local_permissions (
        ::DDS::Security::Authentication_ptr auth_plugin,
        ::DDS::Security::IdentityHandle identity,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::DomainParticipantQos & participant_qos,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::PermissionsHandle validate_remote_permissions (
        ::DDS::Security::Authentication_ptr auth_plugin,
        ::DDS::Security::IdentityHandle local_identity_handle,
        ::DDS::Security::IdentityHandle remote_identity_handle,
        const ::DDS::Security::PermissionsToken & remote_permissions_token,
        const ::DDS::Security::AuthenticatedPeerCredentialToken & remote_credential_token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_create_participant (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::DomainParticipantQos & qos,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_create_datawriter (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const char * topic_name,
        const ::DDS::DataWriterQos & qos,
        const ::DDS::PartitionQosPolicy & partition,
        const ::DDS::Security::DataTags & data_tag,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_create_datareader (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const char * topic_name,
        const ::DDS::DataReaderQos & qos,
        const ::DDS::PartitionQosPolicy & partition,
        const ::DDS::Security::DataTags & data_tag,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_create_topic (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const char * topic_name,
        const ::DDS::TopicQos & qos,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_local_datawriter_register_instance (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::DataWriter_ptr writer,
        ::DDS::Security::DynamicData_ptr key,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_local_datawriter_dispose_instance (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::DataWriter_ptr writer,
        ::DDS::Security::DynamicData_ptr key,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_remote_participant (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::Security::ParticipantBuiltinTopicDataSecure & participant_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_remote_datawriter (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::Security::PublicationBuiltinTopicDataSecure & publication_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_remote_datareader (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::Security::SubscriptionBuiltinTopicDataSecure & subscription_data,
        ::CORBA::Boolean & relay_only,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_remote_topic (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::DomainId_t domain_id,
        const ::DDS::TopicBuiltinTopicData & topic_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_local_datawriter_match (
        ::DDS::Security::PermissionsHandle writer_permissions_handle,
        ::DDS::Security::PermissionsHandle reader_permissions_handle,
        const ::DDS::Security::PublicationBuiltinTopicDataSecure & publication_data,
        const ::DDS::Security::SubscriptionBuiltinTopicDataSecure & subscription_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_local_datareader_match (
        ::DDS::Security::PermissionsHandle reader_permissions_handle,
        ::DDS::Security::PermissionsHandle writer_permissions_handle,
        const ::DDS::Security::SubscriptionBuiltinTopicDataSecure & subscription_data,
        const ::DDS::Security::PublicationBuiltinTopicDataSecure & publication_data,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_remote_datawriter_register_instance (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::DataReader_ptr reader,
        ::DDS::InstanceHandle_t publication_handle,
        ::DDS::Security::DynamicData_ptr key,
        ::DDS::InstanceHandle_t instance_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean check_remote_datawriter_dispose_instance (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::DataReader_ptr reader,
        ::DDS::InstanceHandle_t publication_handle,
        ::DDS::Security::DynamicData_ptr key,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_permissions_token (
        ::DDS::Security::PermissionsToken & permissions_token,
        ::DDS::Security::PermissionsHandle handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_permissions_credential_token (
        ::DDS::Security::PermissionsCredentialToken & permissions_credential_token,
        ::DDS::Security::PermissionsHandle handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean set_listener (
        ::DDS::Security::AccessControlListener_ptr listener,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_permissions_token (
        const ::DDS::Security::PermissionsToken & token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_permissions_credential_token (
        const ::DDS::Security::PermissionsCredentialToken & permissions_credential_token,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_participant_sec_attributes (
        ::DDS::Security::PermissionsHandle permissions_handle,
        ::DDS::Security::ParticipantSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_topic_sec_attributes (
        ::DDS::Security::PermissionsHandle permissions_handle,
        const char * topic_name,
        ::DDS::Security::TopicSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_datawriter_sec_attributes (
        ::DDS::Security::PermissionsHandle permissions_handle,
        const char * topic_name,
        const ::DDS::PartitionQosPolicy & partition,
        const ::DDS::Security::DataTagQosPolicy & data_tag,
        ::DDS::Security::EndpointSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean get_datareader_sec_attributes (
        ::DDS::Security::PermissionsHandle permissions_handle,
        const char * topic_name,
        const ::DDS::PartitionQosPolicy & partition,
        const ::DDS::Security::DataTagQosPolicy & data_tag,
        ::DDS::Security::EndpointSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_participant_sec_attributes (
        const ::DDS::Security::ParticipantSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_datawriter_sec_attributes (
        const ::DDS::Security::EndpointSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_datareader_sec_attributes (
        const ::DDS::Security::EndpointSecurityAttributes & attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      AccessControl (void);

      

      virtual ~AccessControl (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      AccessControl (const AccessControl &);

      void operator= (const AccessControl &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_CRYPTOKEYFACTORY__VAR_OUT_CH_)
#define _DDS_SECURITY_CRYPTOKEYFACTORY__VAR_OUT_CH_

    class CryptoKeyFactory;
    typedef CryptoKeyFactory *CryptoKeyFactory_ptr;

    typedef
      TAO_Objref_Var_T<
          CryptoKeyFactory
        >
      CryptoKeyFactory_var;
    
    typedef
      TAO_Objref_Out_T<
          CryptoKeyFactory
        >
      CryptoKeyFactory_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export CryptoKeyFactory
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef CryptoKeyFactory_ptr _ptr_type;
      typedef CryptoKeyFactory_var _var_type;
      typedef CryptoKeyFactory_out _out_type;

      // The static operations.
      static CryptoKeyFactory_ptr _duplicate (CryptoKeyFactory_ptr obj);

      static void _tao_release (CryptoKeyFactory_ptr obj);

      static CryptoKeyFactory_ptr _narrow (::CORBA::Object_ptr obj);
      static CryptoKeyFactory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static CryptoKeyFactory_ptr _nil (void);

      virtual ::DDS::Security::ParticipantCryptoHandle register_local_participant (
        ::DDS::Security::IdentityHandle participant_identity,
        ::DDS::Security::PermissionsHandle participant_permissions,
        const ::DDS::Security::PropertySeq & participant_properties,
        const ::DDS::Security::ParticipantSecurityAttributes & participant_security_attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::ParticipantCryptoHandle register_matched_remote_participant (
        ::DDS::Security::ParticipantCryptoHandle local_participant_crypto_handle,
        ::DDS::Security::IdentityHandle remote_participant_identity,
        ::DDS::Security::PermissionsHandle remote_participant_permissions,
        ::DDS::Security::SharedSecretHandle_ptr shared_secret,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::DatawriterCryptoHandle register_local_datawriter (
        ::DDS::Security::ParticipantCryptoHandle participant_crypto,
        const ::DDS::Security::PropertySeq & datawriter_properties,
        const ::DDS::Security::EndpointSecurityAttributes & datawriter_security_attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::DatareaderCryptoHandle register_matched_remote_datareader (
        ::DDS::Security::DatawriterCryptoHandle local_datawritert_crypto_handle,
        ::DDS::Security::ParticipantCryptoHandle remote_participant_crypto,
        ::DDS::Security::SharedSecretHandle_ptr shared_secret,
        ::CORBA::Boolean relay_only,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::DatareaderCryptoHandle register_local_datareader (
        ::DDS::Security::ParticipantCryptoHandle participant_crypto,
        const ::DDS::Security::PropertySeq & datareader_properties,
        const ::DDS::Security::EndpointSecurityAttributes & datareader_security_attributes,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::DDS::Security::DatawriterCryptoHandle register_matched_remote_datawriter (
        ::DDS::Security::DatareaderCryptoHandle local_datareader_crypto_handle,
        ::DDS::Security::ParticipantCryptoHandle remote_participant_crypt,
        ::DDS::Security::SharedSecretHandle_ptr shared_secret,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean unregister_participant (
        ::DDS::Security::ParticipantCryptoHandle participant_crypto_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean unregister_datawriter (
        ::DDS::Security::DatawriterCryptoHandle datawriter_crypto_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean unregister_datareader (
        ::DDS::Security::DatareaderCryptoHandle datareader_crypto_handle,
        ::DDS::Security::SecurityException & ex) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      CryptoKeyFactory (void);

      

      virtual ~CryptoKeyFactory (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      CryptoKeyFactory (const CryptoKeyFactory &);

      void operator= (const CryptoKeyFactory &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_CRYPTOKEYEXCHANGE__VAR_OUT_CH_)
#define _DDS_SECURITY_CRYPTOKEYEXCHANGE__VAR_OUT_CH_

    class CryptoKeyExchange;
    typedef CryptoKeyExchange *CryptoKeyExchange_ptr;

    typedef
      TAO_Objref_Var_T<
          CryptoKeyExchange
        >
      CryptoKeyExchange_var;
    
    typedef
      TAO_Objref_Out_T<
          CryptoKeyExchange
        >
      CryptoKeyExchange_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export CryptoKeyExchange
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef CryptoKeyExchange_ptr _ptr_type;
      typedef CryptoKeyExchange_var _var_type;
      typedef CryptoKeyExchange_out _out_type;

      // The static operations.
      static CryptoKeyExchange_ptr _duplicate (CryptoKeyExchange_ptr obj);

      static void _tao_release (CryptoKeyExchange_ptr obj);

      static CryptoKeyExchange_ptr _narrow (::CORBA::Object_ptr obj);
      static CryptoKeyExchange_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static CryptoKeyExchange_ptr _nil (void);

      virtual ::CORBA::Boolean create_local_participant_crypto_tokens (
        ::DDS::Security::ParticipantCryptoTokenSeq & local_participant_crypto_tokens,
        ::DDS::Security::ParticipantCryptoHandle local_participant_crypto,
        ::DDS::Security::ParticipantCryptoHandle remote_participant_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean set_remote_participant_crypto_tokens (
        ::DDS::Security::ParticipantCryptoHandle local_participant_crypto,
        ::DDS::Security::ParticipantCryptoHandle remote_participant_crypto,
        const ::DDS::Security::ParticipantCryptoTokenSeq & remote_participant_tokens,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean create_local_datawriter_crypto_tokens (
        ::DDS::Security::DatawriterCryptoTokenSeq & local_datawriter_crypto_tokens,
        ::DDS::Security::DatawriterCryptoHandle local_datawriter_crypto,
        ::DDS::Security::DatareaderCryptoHandle remote_datareader_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean set_remote_datawriter_crypto_tokens (
        ::DDS::Security::DatareaderCryptoHandle local_datareader_crypto,
        ::DDS::Security::DatawriterCryptoHandle remote_datawriter_crypto,
        const ::DDS::Security::DatawriterCryptoTokenSeq & remote_datawriter_tokens,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean create_local_datareader_crypto_tokens (
        ::DDS::Security::DatareaderCryptoTokenSeq & local_datareader_cryto_tokens,
        ::DDS::Security::DatareaderCryptoHandle local_datareader_crypto,
        ::DDS::Security::DatawriterCryptoHandle remote_datawriter_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean set_remote_datareader_crypto_tokens (
        ::DDS::Security::DatawriterCryptoHandle local_datawriter_crypto,
        ::DDS::Security::DatareaderCryptoHandle remote_datareader_crypto,
        const ::DDS::Security::DatareaderCryptoTokenSeq & remote_datareader_tokens,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean return_crypto_tokens (
        const ::DDS::Security::CryptoTokenSeq & crypto_tokens,
        ::DDS::Security::SecurityException & ex) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      CryptoKeyExchange (void);

      

      virtual ~CryptoKeyExchange (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      CryptoKeyExchange (const CryptoKeyExchange &);

      void operator= (const CryptoKeyExchange &);
    };

    // TAO_IDL - Generated from
    // be/be_visitor_enum/enum_ch.cpp:47

    enum SecureSubmessageCategory_t
    {
      INFO_SUBMESSAGE,
      DATAWRITER_SUBMESSAGE,
      DATAREADER_SUBMESSAGE
    };

    typedef SecureSubmessageCategory_t &SecureSubmessageCategory_t_out;

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_DDS_SECURITY_CRYPTOTRANSFORM__VAR_OUT_CH_)
#define _DDS_SECURITY_CRYPTOTRANSFORM__VAR_OUT_CH_

    class CryptoTransform;
    typedef CryptoTransform *CryptoTransform_ptr;

    typedef
      TAO_Objref_Var_T<
          CryptoTransform
        >
      CryptoTransform_var;
    
    typedef
      TAO_Objref_Out_T<
          CryptoTransform
        >
      CryptoTransform_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class OpenDDS_Dcps_Export CryptoTransform
      : public virtual ::CORBA::Object
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef CryptoTransform_ptr _ptr_type;
      typedef CryptoTransform_var _var_type;
      typedef CryptoTransform_out _out_type;

      // The static operations.
      static CryptoTransform_ptr _duplicate (CryptoTransform_ptr obj);

      static void _tao_release (CryptoTransform_ptr obj);

      static CryptoTransform_ptr _narrow (::CORBA::Object_ptr obj);
      static CryptoTransform_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static CryptoTransform_ptr _nil (void);

      virtual ::CORBA::Boolean encode_serialized_payload (
        ::DDS::OctetSeq & encoded_buffer,
        ::DDS::OctetSeq & extra_inline_qos,
        const ::DDS::OctetSeq & plain_buffer,
        ::DDS::Security::DatawriterCryptoHandle sending_datawriter_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean encode_datawriter_submessage (
        ::DDS::OctetSeq & encoded_rtps_submessage,
        const ::DDS::OctetSeq & plain_rtps_submessage,
        ::DDS::Security::DatawriterCryptoHandle sending_datawriter_crypto,
        const ::DDS::Security::DatareaderCryptoHandleSeq & receiving_datareader_crypto_list,
        ::CORBA::Long & receiving_datareader_crypto_list_index,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean encode_datareader_submessage (
        ::DDS::OctetSeq & encoded_rtps_submessage,
        const ::DDS::OctetSeq & plain_rtps_submessage,
        ::DDS::Security::DatareaderCryptoHandle sending_datareader_crypto,
        const ::DDS::Security::DatawriterCryptoHandleSeq & receiving_datawriter_crypto_list,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean encode_rtps_message (
        ::DDS::OctetSeq & encoded_rtps_message,
        const ::DDS::OctetSeq & plain_rtps_message,
        ::DDS::Security::ParticipantCryptoHandle sending_participant_crypto,
        const ::DDS::Security::ParticipantCryptoHandleSeq & receiving_participant_crypto_list,
        ::CORBA::Long & receiving_participant_crypto_list_index,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean decode_rtps_message (
        ::DDS::OctetSeq & plain_buffer,
        const ::DDS::OctetSeq & encoded_buffer,
        ::DDS::Security::ParticipantCryptoHandle receiving_participant_crypto,
        ::DDS::Security::ParticipantCryptoHandle sending_participant_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean preprocess_secure_submsg (
        ::DDS::Security::DatawriterCryptoHandle & datawriter_crypto,
        ::DDS::Security::DatareaderCryptoHandle & datareader_crypto,
        ::DDS::Security::SecureSubmessageCategory_t & secure_submessage_category,
        const ::DDS::OctetSeq & encoded_rtps_submessage,
        ::DDS::Security::ParticipantCryptoHandle receiving_participant_crypto,
        ::DDS::Security::ParticipantCryptoHandle sending_participant_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean decode_datawriter_submessage (
        ::DDS::OctetSeq & plain_rtps_submessage,
        const ::DDS::OctetSeq & encoded_rtps_submessage,
        ::DDS::Security::DatareaderCryptoHandle receiving_datareader_crypto,
        ::DDS::Security::DatawriterCryptoHandle sending_datawriter_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean decode_datareader_submessage (
        ::DDS::OctetSeq & plain_rtps_submessage,
        const ::DDS::OctetSeq & encoded_rtps_submessage,
        ::DDS::Security::DatawriterCryptoHandle receiving_datawriter_crypto,
        ::DDS::Security::DatareaderCryptoHandle sending_datareader_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      virtual ::CORBA::Boolean decode_serialized_payload (
        ::DDS::OctetSeq & plain_buffer,
        const ::DDS::OctetSeq & encoded_buffer,
        const ::DDS::OctetSeq & inline_qos,
        ::DDS::Security::DatareaderCryptoHandle receiving_datareader_crypto,
        ::DDS::Security::DatawriterCryptoHandle sending_datawriter_crypto,
        ::DDS::Security::SecurityException & ex) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      CryptoTransform (void);

      

      virtual ~CryptoTransform (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      CryptoTransform (const CryptoTransform &);

      void operator= (const CryptoTransform &);
    };
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module DDS::Security

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module DDS

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::DDS::Security::CryptoTokenSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::CryptoTokenSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::MessageIdentity>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::Security::MessageIdentity,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::ParticipantGenericMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::ParticipantGenericMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::ParticipantBuiltinTopicData>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::ParticipantBuiltinTopicData,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::ParticipantBuiltinTopicDataSecure>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::ParticipantBuiltinTopicDataSecure,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::PublicationBuiltinTopicData>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::PublicationBuiltinTopicData,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::SubscriptionBuiltinTopicData>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::SubscriptionBuiltinTopicData,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::PublicationBuiltinTopicDataSecure>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::PublicationBuiltinTopicDataSecure,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::SubscriptionBuiltinTopicDataSecure>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::SubscriptionBuiltinTopicDataSecure,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::SecurityException>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::SecurityException,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::DDS::Security::ValidationResult_t>
    : public
        Basic_Arg_Traits_T<
            ::DDS::Security::ValidationResult_t,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::DDS::Security::ParticipantCryptoHandleSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::ParticipantCryptoHandleSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::DDS::Security::DatawriterCryptoHandleSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::DatawriterCryptoHandleSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::DDS::Security::DatareaderCryptoHandleSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::DatareaderCryptoHandleSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::DDS::Security::AuthStatusKind>
    : public
        Basic_Arg_Traits_T<
            ::DDS::Security::AuthStatusKind,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::ParticipantSecurityAttributes>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::ParticipantSecurityAttributes,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::TopicSecurityAttributes>
    : public
        Fixed_Size_Arg_Traits_T<
            ::DDS::Security::TopicSecurityAttributes,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::DDS::Security::EndpointSecurityAttributes>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::Security::EndpointSecurityAttributes,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::DDS::Security::SecureSubmessageCategory_t>
    : public
        Basic_Arg_Traits_T<
            ::DDS::Security::SecureSubmessageCategory_t,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DDS_SECURITY_DYNAMICDATA__TRAITS_)
#define _DDS_SECURITY_DYNAMICDATA__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::DynamicData>
  {
    static ::DDS::Security::DynamicData_ptr duplicate (
        ::DDS::Security::DynamicData_ptr p);
    static void release (
        ::DDS::Security::DynamicData_ptr p);
    static ::DDS::Security::DynamicData_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::DynamicData_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_SHAREDSECRETHANDLE__TRAITS_)
#define _DDS_SECURITY_SHAREDSECRETHANDLE__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::SharedSecretHandle>
  {
    static ::DDS::Security::SharedSecretHandle_ptr duplicate (
        ::DDS::Security::SharedSecretHandle_ptr p);
    static void release (
        ::DDS::Security::SharedSecretHandle_ptr p);
    static ::DDS::Security::SharedSecretHandle_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::SharedSecretHandle_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_AUTHENTICATIONLISTENER__TRAITS_)
#define _DDS_SECURITY_AUTHENTICATIONLISTENER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::AuthenticationListener>
  {
    static ::DDS::Security::AuthenticationListener_ptr duplicate (
        ::DDS::Security::AuthenticationListener_ptr p);
    static void release (
        ::DDS::Security::AuthenticationListener_ptr p);
    static ::DDS::Security::AuthenticationListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::AuthenticationListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_AUTHENTICATION__TRAITS_)
#define _DDS_SECURITY_AUTHENTICATION__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::Authentication>
  {
    static ::DDS::Security::Authentication_ptr duplicate (
        ::DDS::Security::Authentication_ptr p);
    static void release (
        ::DDS::Security::Authentication_ptr p);
    static ::DDS::Security::Authentication_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::Authentication_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_ACCESSCONTROLLISTENER__TRAITS_)
#define _DDS_SECURITY_ACCESSCONTROLLISTENER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::AccessControlListener>
  {
    static ::DDS::Security::AccessControlListener_ptr duplicate (
        ::DDS::Security::AccessControlListener_ptr p);
    static void release (
        ::DDS::Security::AccessControlListener_ptr p);
    static ::DDS::Security::AccessControlListener_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::AccessControlListener_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_ACCESSCONTROL__TRAITS_)
#define _DDS_SECURITY_ACCESSCONTROL__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::AccessControl>
  {
    static ::DDS::Security::AccessControl_ptr duplicate (
        ::DDS::Security::AccessControl_ptr p);
    static void release (
        ::DDS::Security::AccessControl_ptr p);
    static ::DDS::Security::AccessControl_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::AccessControl_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_CRYPTOKEYFACTORY__TRAITS_)
#define _DDS_SECURITY_CRYPTOKEYFACTORY__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::CryptoKeyFactory>
  {
    static ::DDS::Security::CryptoKeyFactory_ptr duplicate (
        ::DDS::Security::CryptoKeyFactory_ptr p);
    static void release (
        ::DDS::Security::CryptoKeyFactory_ptr p);
    static ::DDS::Security::CryptoKeyFactory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::CryptoKeyFactory_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_CRYPTOKEYEXCHANGE__TRAITS_)
#define _DDS_SECURITY_CRYPTOKEYEXCHANGE__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::CryptoKeyExchange>
  {
    static ::DDS::Security::CryptoKeyExchange_ptr duplicate (
        ::DDS::Security::CryptoKeyExchange_ptr p);
    static void release (
        ::DDS::Security::CryptoKeyExchange_ptr p);
    static ::DDS::Security::CryptoKeyExchange_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::CryptoKeyExchange_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_SECURITY_CRYPTOTRANSFORM__TRAITS_)
#define _DDS_SECURITY_CRYPTOTRANSFORM__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Security::CryptoTransform>
  {
    static ::DDS::Security::CryptoTransform_ptr duplicate (
        ::DDS::Security::CryptoTransform_ptr p);
    static void release (
        ::DDS::Security::CryptoTransform_ptr p);
    static ::DDS::Security::CryptoTransform_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Security::CryptoTransform_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_DDS_Security_CryptoTokenSeq_H_
#define _TAO_CDR_OP_DDS_Security_CryptoTokenSeq_H_

OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::Security::CryptoTokenSeq &_tao_sequence);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::Security::CryptoTokenSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DDS_Security_CryptoTokenSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::MessageIdentity &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::MessageIdentity &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::ParticipantGenericMessage &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::ParticipantGenericMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::ParticipantBuiltinTopicData &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::ParticipantBuiltinTopicData &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::ParticipantBuiltinTopicDataSecure &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::ParticipantBuiltinTopicDataSecure &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::PublicationBuiltinTopicData &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::PublicationBuiltinTopicData &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::SubscriptionBuiltinTopicData &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::SubscriptionBuiltinTopicData &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::PublicationBuiltinTopicDataSecure &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::PublicationBuiltinTopicDataSecure &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::SubscriptionBuiltinTopicDataSecure &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::SubscriptionBuiltinTopicDataSecure &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::SecurityException &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::SecurityException &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, DDS::Security::ValidationResult_t _tao_enumerator);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, DDS::Security::ValidationResult_t &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_DDS_Security_ParticipantCryptoHandleSeq_H_
#define _TAO_CDR_OP_DDS_Security_ParticipantCryptoHandleSeq_H_

OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::Security::ParticipantCryptoHandleSeq &_tao_sequence);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::Security::ParticipantCryptoHandleSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DDS_Security_ParticipantCryptoHandleSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_DDS_Security_DatawriterCryptoHandleSeq_H_
#define _TAO_CDR_OP_DDS_Security_DatawriterCryptoHandleSeq_H_

OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::Security::DatawriterCryptoHandleSeq &_tao_sequence);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::Security::DatawriterCryptoHandleSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DDS_Security_DatawriterCryptoHandleSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_DDS_Security_DatareaderCryptoHandleSeq_H_
#define _TAO_CDR_OP_DDS_Security_DatareaderCryptoHandleSeq_H_

OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::Security::DatareaderCryptoHandleSeq &_tao_sequence);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::Security::DatareaderCryptoHandleSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




#endif /* _TAO_CDR_OP_DDS_Security_DatareaderCryptoHandleSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, DDS::Security::AuthStatusKind _tao_enumerator);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, DDS::Security::AuthStatusKind &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::ParticipantSecurityAttributes &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::ParticipantSecurityAttributes &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::TopicSecurityAttributes &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::TopicSecurityAttributes &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const DDS::Security::EndpointSecurityAttributes &);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, DDS::Security::EndpointSecurityAttributes &);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

OpenDDS_Dcps_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, DDS::Security::SecureSubmessageCategory_t _tao_enumerator);
OpenDDS_Dcps_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, DDS::Security::SecureSubmessageCategory_t &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_codegen.cpp:1703


OPENDDS_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "DdsSecurityCoreC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

