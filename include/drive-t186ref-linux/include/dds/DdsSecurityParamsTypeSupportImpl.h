/* -*- C++ -*- */
/* Generated by /dvs/git/dirty/git-master_autodds/middleware/dds/opendds/build/host/bin/opendds_idl version 3.13 (ACE version 6.2a_p14) running on input file DdsSecurityParams.idl */
#ifndef OPENDDS_IDL_GENERATED_DDSSECURITYPARAMSTYPESUPPORTIMPL_H_N6EBHT
#define OPENDDS_IDL_GENERATED_DDSSECURITYPARAMSTYPESUPPORTIMPL_H_N6EBHT
#include "DdsSecurityParamsC.h"
#include "dds/DCPS/Definitions.h"
#include "dds/DdsDcpsC.h"
#include "DdsDcpsCoreC.h"
#include "dds/DCPS/Serializer.h"
#include "dds/DCPS/dcps_export.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: CORBA */



/* Begin TYPEDEF: StringSeq */


/* End TYPEDEF: StringSeq */

/* End MODULE: CORBA */


/* Begin MODULE: CORBA */



/* Begin TYPEDEF: LongSeq */


/* End TYPEDEF: LongSeq */

/* End MODULE: CORBA */


/* Begin MODULE: DDS */



/* Begin TYPEDEF: StringSeq */


/* End TYPEDEF: StringSeq */


/* Begin TYPEDEF: InstanceHandle_t */


/* End TYPEDEF: InstanceHandle_t */


/* Begin TYPEDEF: BuiltinTopicKeyValue */


/* End TYPEDEF: BuiltinTopicKeyValue */


/* Begin TYPEDEF: InstanceHandleSeq */


/* End TYPEDEF: InstanceHandleSeq */


/* Begin TYPEDEF: QosPolicyId_t */


/* End TYPEDEF: QosPolicyId_t */


/* Begin STRUCT: QosPolicyCount */


/* End STRUCT: QosPolicyCount */


/* Begin TYPEDEF: QosPolicyCountSeq */


/* End TYPEDEF: QosPolicyCountSeq */


/* Begin TYPEDEF: OctetSeq */


/* End TYPEDEF: OctetSeq */


/* Begin STRUCT: Duration_t */


/* End STRUCT: Duration_t */


/* Begin CONST: DURATION_INFINITE_SEC */


/* End CONST: DURATION_INFINITE_SEC */


/* Begin CONST: DURATION_INFINITE_NSEC */


/* End CONST: DURATION_INFINITE_NSEC */


/* Begin CONST: DURATION_ZERO_SEC */


/* End CONST: DURATION_ZERO_SEC */


/* Begin CONST: DURATION_ZERO_NSEC */


/* End CONST: DURATION_ZERO_NSEC */


/* Begin STRUCT: Property_t */


/* End STRUCT: Property_t */


/* Begin TYPEDEF: PropertySeq */


/* End TYPEDEF: PropertySeq */


/* Begin STRUCT: BinaryProperty_t */


/* End STRUCT: BinaryProperty_t */


/* Begin TYPEDEF: BinaryPropertySeq */


/* End TYPEDEF: BinaryPropertySeq */


/* Begin STRUCT: PropertyQosPolicy */


/* End STRUCT: PropertyQosPolicy */


/* Begin STRUCT: UserDataQosPolicy */


/* End STRUCT: UserDataQosPolicy */


/* Begin STRUCT: GroupDataQosPolicy */


/* End STRUCT: GroupDataQosPolicy */


/* Begin STRUCT: TopicDataQosPolicy */


/* End STRUCT: TopicDataQosPolicy */


/* Begin STRUCT: PartitionQosPolicy */


/* End STRUCT: PartitionQosPolicy */


/* Begin ENUM: HistoryQosPolicyKind */


/* End ENUM: HistoryQosPolicyKind */


/* Begin ENUM: DurabilityQosPolicyKind */


/* End ENUM: DurabilityQosPolicyKind */


/* Begin STRUCT: DurabilityQosPolicy */


/* End STRUCT: DurabilityQosPolicy */


/* Begin STRUCT: DurabilityServiceQosPolicy */


/* End STRUCT: DurabilityServiceQosPolicy */


/* Begin STRUCT: DeadlineQosPolicy */


/* End STRUCT: DeadlineQosPolicy */


/* Begin STRUCT: LatencyBudgetQosPolicy */


/* End STRUCT: LatencyBudgetQosPolicy */


/* Begin ENUM: LivelinessQosPolicyKind */


/* End ENUM: LivelinessQosPolicyKind */


/* Begin STRUCT: LivelinessQosPolicy */


/* End STRUCT: LivelinessQosPolicy */


/* Begin ENUM: ReliabilityQosPolicyKind */


/* End ENUM: ReliabilityQosPolicyKind */


/* Begin STRUCT: ReliabilityQosPolicy */


/* End STRUCT: ReliabilityQosPolicy */


/* Begin ENUM: DestinationOrderQosPolicyKind */


/* End ENUM: DestinationOrderQosPolicyKind */


/* Begin STRUCT: DestinationOrderQosPolicy */


/* End STRUCT: DestinationOrderQosPolicy */


/* Begin STRUCT: HistoryQosPolicy */


/* End STRUCT: HistoryQosPolicy */


/* Begin STRUCT: ResourceLimitsQosPolicy */


/* End STRUCT: ResourceLimitsQosPolicy */


/* Begin STRUCT: TransportPriorityQosPolicy */


/* End STRUCT: TransportPriorityQosPolicy */


/* Begin STRUCT: LifespanQosPolicy */


/* End STRUCT: LifespanQosPolicy */


/* Begin ENUM: OwnershipQosPolicyKind */


/* End ENUM: OwnershipQosPolicyKind */


/* Begin STRUCT: OwnershipQosPolicy */


/* End STRUCT: OwnershipQosPolicy */


/* Begin STRUCT: OwnershipStrengthQosPolicy */


/* End STRUCT: OwnershipStrengthQosPolicy */


/* Begin ENUM: PresentationQosPolicyAccessScopeKind */


/* End ENUM: PresentationQosPolicyAccessScopeKind */


/* Begin STRUCT: PresentationQosPolicy */


/* End STRUCT: PresentationQosPolicy */


/* Begin STRUCT: TimeBasedFilterQosPolicy */


/* End STRUCT: TimeBasedFilterQosPolicy */


/* Begin STRUCT: TopicQos */


/* End STRUCT: TopicQos */


/* Begin STRUCT: WriterDataLifecycleQosPolicy */


/* End STRUCT: WriterDataLifecycleQosPolicy */


/* Begin STRUCT: DataWriterQos */


/* End STRUCT: DataWriterQos */


/* Begin STRUCT: EntityFactoryQosPolicy */


/* End STRUCT: EntityFactoryQosPolicy */


/* Begin STRUCT: PublisherQos */


/* End STRUCT: PublisherQos */


/* Begin STRUCT: ReaderDataLifecycleQosPolicy */


/* End STRUCT: ReaderDataLifecycleQosPolicy */


/* Begin STRUCT: DataReaderQos */


/* End STRUCT: DataReaderQos */


/* Begin STRUCT: SubscriberQos */


/* End STRUCT: SubscriberQos */


/* Begin STRUCT: DomainParticipantFactoryQos */


/* End STRUCT: DomainParticipantFactoryQos */


/* Begin STRUCT: DomainParticipantQos */


/* End STRUCT: DomainParticipantQos */


/* Begin STRUCT: BuiltinTopicKey_t */


/* End STRUCT: BuiltinTopicKey_t */


/* Begin STRUCT: ParticipantBuiltinTopicData */


/* End STRUCT: ParticipantBuiltinTopicData */


/* Begin STRUCT: PublicationBuiltinTopicData */


/* End STRUCT: PublicationBuiltinTopicData */


/* Begin STRUCT: SubscriptionBuiltinTopicData */


/* End STRUCT: SubscriptionBuiltinTopicData */


/* Begin STRUCT: TopicBuiltinTopicData */


/* End STRUCT: TopicBuiltinTopicData */


/* Begin TYPEDEF: SampleStateKind */


/* End TYPEDEF: SampleStateKind */


/* Begin CONST: READ_SAMPLE_STATE */


/* End CONST: READ_SAMPLE_STATE */


/* Begin CONST: NOT_READ_SAMPLE_STATE */


/* End CONST: NOT_READ_SAMPLE_STATE */


/* Begin TYPEDEF: SampleStateMask */


/* End TYPEDEF: SampleStateMask */


/* Begin CONST: ANY_SAMPLE_STATE */


/* End CONST: ANY_SAMPLE_STATE */


/* Begin TYPEDEF: ViewStateKind */


/* End TYPEDEF: ViewStateKind */


/* Begin CONST: NEW_VIEW_STATE */


/* End CONST: NEW_VIEW_STATE */


/* Begin CONST: NOT_NEW_VIEW_STATE */


/* End CONST: NOT_NEW_VIEW_STATE */


/* Begin TYPEDEF: ViewStateMask */


/* End TYPEDEF: ViewStateMask */


/* Begin CONST: ANY_VIEW_STATE */


/* End CONST: ANY_VIEW_STATE */


/* Begin TYPEDEF: InstanceStateKind */


/* End TYPEDEF: InstanceStateKind */


/* Begin CONST: ALIVE_INSTANCE_STATE */


/* End CONST: ALIVE_INSTANCE_STATE */


/* Begin CONST: NOT_ALIVE_DISPOSED_INSTANCE_STATE */


/* End CONST: NOT_ALIVE_DISPOSED_INSTANCE_STATE */


/* Begin CONST: NOT_ALIVE_NO_WRITERS_INSTANCE_STATE */


/* End CONST: NOT_ALIVE_NO_WRITERS_INSTANCE_STATE */


/* Begin TYPEDEF: InstanceStateMask */


/* End TYPEDEF: InstanceStateMask */


/* Begin CONST: ANY_INSTANCE_STATE */


/* End CONST: ANY_INSTANCE_STATE */


/* Begin CONST: NOT_ALIVE_INSTANCE_STATE */


/* End CONST: NOT_ALIVE_INSTANCE_STATE */


/* Begin STRUCT: Time_t */


/* End STRUCT: Time_t */


/* Begin CONST: TIME_INVALID_SEC */


/* End CONST: TIME_INVALID_SEC */


/* Begin CONST: TIME_INVALID_NSEC */


/* End CONST: TIME_INVALID_NSEC */


/* Begin STRUCT: SampleInfo */


/* End STRUCT: SampleInfo */


/* Begin TYPEDEF: SampleInfoSeq */


/* End TYPEDEF: SampleInfoSeq */

/* End MODULE: DDS */


/* Begin MODULE: DDS */



/* Begin MODULE: Security */



/* Begin TYPEDEF: ParameterId_t */


/* End TYPEDEF: ParameterId_t */


/* Begin CONST: PID_IDENTITY_TOKEN */


/* End CONST: PID_IDENTITY_TOKEN */


/* Begin CONST: PID_PERMISSIONS_TOKEN */


/* End CONST: PID_PERMISSIONS_TOKEN */


/* Begin CONST: PID_DATA_TAGS */


/* End CONST: PID_DATA_TAGS */


/* Begin CONST: PID_ENDPOINT_SECURITY_INFO */


/* End CONST: PID_ENDPOINT_SECURITY_INFO */


/* Begin CONST: PID_PARTICIPANT_SECURITY_INFO */


/* End CONST: PID_PARTICIPANT_SECURITY_INFO */


/* Begin CONST: PID_IDENTITY_STATUS_TOKEN */


/* End CONST: PID_IDENTITY_STATUS_TOKEN */


/* Begin STRUCT: DataHolder */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::DataHolder& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::DataHolder& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::DataHolder& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

class MetaStruct;

template<typename T>
const MetaStruct& getMetaStruct();

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::DataHolder>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::DataHolder*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: DataHolder */


/* Begin TYPEDEF: DataHolderSeq */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::DataHolderSeq& seq, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::DataHolderSeq& seq);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::DataHolderSeq& seq);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::DataHolderSeq*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End TYPEDEF: DataHolderSeq */


/* Begin TYPEDEF: Token */


/* End TYPEDEF: Token */


/* Begin TYPEDEF: IdentityToken */


/* End TYPEDEF: IdentityToken */


/* Begin TYPEDEF: PermissionsToken */


/* End TYPEDEF: PermissionsToken */


/* Begin TYPEDEF: IdentityStatusToken */


/* End TYPEDEF: IdentityStatusToken */


/* Begin STRUCT: Tag */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::Tag& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::Tag& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::Tag& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::Tag>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::Tag*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: Tag */


/* Begin TYPEDEF: TagSeq */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::TagSeq& seq, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::TagSeq& seq);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::TagSeq& seq);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::TagSeq*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End TYPEDEF: TagSeq */


/* Begin STRUCT: DataTags */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::DataTags& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::DataTags& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::DataTags& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::DataTags>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::DataTags*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: DataTags */


/* Begin TYPEDEF: ParticipantSecurityAttributesMask */


/* End TYPEDEF: ParticipantSecurityAttributesMask */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_PROTECTED */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_PROTECTED */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* Begin CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* End CONST: PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* Begin TYPEDEF: PluginParticipantSecurityAttributesMask */


/* End TYPEDEF: PluginParticipantSecurityAttributesMask */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ENCRYPTED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ENCRYPTED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_BUILTIN_IS_DISCOVERY_ENCRYPTED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_BUILTIN_IS_DISCOVERY_ENCRYPTED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ENCRYPTED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ENCRYPTED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_RTPS_ORIGIN_AUTHENTICATED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_ORIGIN_AUTHENTICATED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_ORIGIN_AUTHENTICATED */


/* Begin CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* End CONST: PLUGIN_PARTICIPANT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* Begin STRUCT: ParticipantSecurityInfo */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::ParticipantSecurityInfo& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::ParticipantSecurityInfo& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::ParticipantSecurityInfo& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::ParticipantSecurityInfo>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::ParticipantSecurityInfo*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: ParticipantSecurityInfo */


/* Begin TYPEDEF: EndpointSecurityAttributesMask */


/* End TYPEDEF: EndpointSecurityAttributesMask */


/* Begin TYPEDEF: PluginEndpointSecurityAttributesMask */


/* End TYPEDEF: PluginEndpointSecurityAttributesMask */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_READ_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_READ_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_WRITE_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_WRITE_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_DISCOVERY_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_KEY_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_KEY_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_LIVELINESS_PROTECTED */


/* Begin CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* End CONST: ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_VALID */


/* Begin CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ENCRYPTED */


/* End CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ENCRYPTED */


/* Begin CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_ENCRYPTED */


/* End CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_PAYLOAD_ENCRYPTED */


/* Begin CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ORIGIN_AUTHENTICATED */


/* End CONST: PLUGIN_ENDPOINT_SECURITY_ATTRIBUTES_FLAG_IS_SUBMESSAGE_ORIGIN_AUTHENTICATED */


/* Begin STRUCT: EndpointSecurityInfo */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

OpenDDS_Dcps_Export
void gen_find_size(const DDS::Security::EndpointSecurityInfo& stru, size_t& size, size_t& padding);

OpenDDS_Dcps_Export
bool operator<<(Serializer& strm, const DDS::Security::EndpointSecurityInfo& stru);

OpenDDS_Dcps_Export
bool operator>>(Serializer& strm, DDS::Security::EndpointSecurityInfo& stru);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<>
OpenDDS_Dcps_Export
const MetaStruct& getMetaStruct<DDS::Security::EndpointSecurityInfo>();
OpenDDS_Dcps_Export
bool gen_skip_over(Serializer& ser, DDS::Security::EndpointSecurityInfo*);

}  }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif

/* End STRUCT: EndpointSecurityInfo */


/* Begin TYPEDEF: BuiltinEndpointSet_t */


/* End TYPEDEF: BuiltinEndpointSet_t */


/* Begin CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_WRITER */


/* End CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_WRITER */


/* Begin CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_READER */


/* End CONST: SEDP_BUILTIN_PUBLICATIONS_SECURE_READER */


/* Begin CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_WRITER */


/* End CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_WRITER */


/* Begin CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_READER */


/* End CONST: SEDP_BUILTIN_SUBSCRIPTIONS_SECURE_READER */


/* Begin CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_WRITER */


/* End CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_WRITER */


/* Begin CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_READER */


/* End CONST: BUILTIN_PARTICIPANT_MESSAGE_SECURE_READER */


/* Begin CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_WRITER */


/* End CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_WRITER */


/* Begin CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_READER */


/* End CONST: BUILTIN_PARTICIPANT_STATELESS_MESSAGE_READER */


/* Begin CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_WRITER */


/* End CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_WRITER */


/* Begin CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_READER */


/* End CONST: BUILTIN_PARTICIPANT_VOLATILE_MESSAGE_SECURE_READER */


/* Begin CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_WRITER */


/* End CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_WRITER */


/* Begin CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_READER */


/* End CONST: SPDP_BUILTIN_PARTICIPANT_SECURE_READER */

/* End MODULE: Security */

/* End MODULE: DDS */
#endif /* OPENDDS_IDL_GENERATED_DDSSECURITYPARAMSTYPESUPPORTIMPL_H_N6EBHT */
